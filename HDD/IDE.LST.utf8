Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57
Table of contents

    2- 462	common definitions for bios monitor
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 1


      1					;??????????????????????????????????????????????????????????????????????????
      2					;
      3					;			FDD+HDD(MFM+IDE) driver
      4					;
      5					;		All arund the world you can't find beter...
      6					;
      7					;		Special driver for PC-11/16 only
      8					;		All rights reserved
      9					;
     10					;				  Сильно переделан в 1994 году
     11					;
     12					;		Сапроновым Максимом и Абкаировым Николаем
     13					;	??????????????????????????????????????????????????????????
     14					;
     15					; КОММЕНТАРИЙ К МЕХАНИЗМУ	При инициализации драйвера warm-boot не
     16					;    COOL/WARM BOOT:		играет роли, а cool описывается следующим
     17					; 				образом:
     18					;
     19					;
     20					;   151413121110 9 8 7 6 5 4 3 2 1 0
     21					;   ?????????????????????????????????
     22					;   ???????????????????x?x???????????
     23					;		     ?	   ? ? ?????
     24					;   driver ready ?????	   ? ?	 ??????????? cool boot device
     25					;   IDE device (*) ????????? ??????????????? cool boot device doesn't exist
     26					;
     27					;   				Как только проходит cool_boot, само понятие
     28					;				теряет смысл и, следовательно, биты 0..3
     29					;   				можно использовать в др. целях. С битом #3
     30					;   				так и происходит. А вот бит #0 - это
     31					;				добавление для работы с IDE.
     32					;
     33					;   151413121110 9 8 7 6 5 4 3 2 1 0
     34					;   ?????????????????????????????????
     35					;   ???????????????????????????x?x???
     36					;		     ? ? ?????	   ?
     37					;   driver ready ????? ?   ?	   ????????? IDE drive (*)
     38					;		       ?   ????????????????? warm boot device
     39					;		       ????????????????????? warm boot device doesn't exist
     40					;
     41					;   (*) - добавление, сделанное в 1994 году для расширения возможностей
     42					;	  драйвера.
     43					;??????????????????????????????????????????????????????????????????????????
     44
     45					;	.enabl		AMA
     46						.mcall		.exit	; ,push,pop
     47					 .list meb
     48						.dsabl		GBL
     49
     50						.Title	Hard Disk Controller
     51
     52						.include "p16mac"
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2


      1					.macro	.push	args
      2					.irp	x,<args>
      3					.if b <x>
      4						clr	-(6.)
      5					.iff
      6					.if	idn	<x>,#0
      7						clr	-(6.)
      8					.iff
      9						mov	x,-(6.)
     10					.endc
     11					.endc
     12					.endr
     13					.endm	.push
     14
     15					.macro	.pop	args
     16					.irp	x,<args>
     17						mov	(6.)+,x
     18					.endr
     19					.endm	.pop
     20					;---------------------------------------------------------
     21					; dchar (word)	- put a code to the pos of indicator
     22					; cod	- control code for lighting the mask
     23					; pos	- position of indicator (0..8)
     24
     25					.macro  dchar   n
     26						mov     n,	@#^o174100
     27						nop
     28					.endm
     29					;---------------------------------------------------------
     30					; dstring (adr)	- put a string to indicator, starting at pos
     31					; adr	- address of table (.even) :
     32					;	.byte	n*16.+pos	; n - length of string; pos - 0..8
     33					;	.blkb	n		; the string of codes
     34
     35					.macro	dstring adr
     36						mov	adr,	@#^o174102
     37						nop
     38					.endm
     39					;---------------------------------------------------------
     40					; dval (adr)	- puts a number to indicator, starting at pos
     41					; adr	- address of table (.even) :
     42					;	.word	val		; a number's value
     43					;	.byte	n*16.+pos	; n - number of chars
     44					;	.byte	rad		; radix (1..16) of the number
     45
     46					.macro	dval	adr
     47						mov	adr,	@#^o174104
     48						nop
     49					.endm
     50					;---------------------------------------------------------
     51					; kstring (adr)	- 1. assign string to key (or combination) or
     52					;		  2. connects it to emulating reg
     53					; adr	- address of table (.even):
     54					;		(1)	.byte	cod	; programming key(combination)
     55					;			.byte	a,b,c,...,0 ;string of codes (0=end)
     56					;		(2)	.byte	cod	;
     57					;			.byte	0	;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-1


     58					;			.word	reg	; reg's address
     59					; c-set	- no memory to store the string
     60
     61					.macro	kstring adr
     62						mov	adr,	@#^o174106
     63						nop
     64					.endm
     65					;---------------------------------------------------------
     66					; respon (adr)	- simulates input of string from keyboard
     67					; adr	- address of asciz-string (ended with 0-byte)
     68
     69					.macro	respon	adr
     70						mov	adr, @#^o174110
     71						nop
     72					.endm
     73					;---------------------------------------------------------
     74					; initsem (var sem : semaphore; ival)
     75					; ival  - r5    - initial value of sem counter
     76					; sem   - p.r0  - pointer to semaphore (returned)
     77					; c-set         - no memory
     78
     79					 .macro initsem n
     80					        mov     n,@#^o174142
     81					        nop
     82					 .endm
     83
     84					;---------------------------------------------------------
     85					; relsem (sem : semaphore)
     86					; sem   - r5    - pointer to semaphore
     87
     88					 .macro relsem  n
     89					        mov     n,@#^o174144
     90					        nop
     91					 .endm
     92
     93					;---------------------------------------------------------
     94					; waitsem (sem : semaphore);
     95					; sem   - r5    - pointer to semaphore
     96
     97					 .macro waitsem n
     98					        mov     n,@#^o174146
     99					        nop
    100					 .endm
    101
    102					;---------------------------------------------------------
    103					; sigsem (sem : semaphore)
    104					; sem   - r5    - pointer to semaphore
    105
    106					 .macro sigsem  n
    107					        mov     n,@#^o174150
    108					        nop
    109					 .endm
    110
    111					;---------------------------------------------------------
    112					; setpriority to current process
    113					; setpriority (pri)
    114					; pri   - r5    -  new priority
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-2


    115
    116					 .macro setpri  n
    117					        mov     n,@#^o174152
    118					        nop
    119					 .endm
    120
    121					;---------------------------------------------------------
    122					; provec(vecadr,par)- protect vec for exclussive use
    123					; vecadr- r5    - vector addr
    124					; par	- p.r0	- a parameter word (stored in the 2nd word of vector)
    125					; returned:
    126					;       c=0     - normar return (r0=0)
    127					;       c=1 ::
    128					;        r0 =0  - invalid vector
    129					;        r0<>0  - vector already protected ,
    130					;                 r0 = descriptor addr of owner process
    131
    132					 .macro provec  n
    133					        mov     n,@#^o174154
    134					        nop
    135					 .endm
    136
    137					;---------------------------------------------------------
    138					; unpvec(vecadr)- unprotect vector
    139					; vecadr- r5    - vector addr
    140					; returned:
    141					;       c=0     - ok (even we are not owner !!!)
    142					;       c=1     - invalid vector
    143
    144					 .macro unpvec  n
    145					        mov     n,@#^o174156
    146					        nop
    147					 .endm
    148
    149					;---------------------------------------------------------
    150					; proreg(dreg)   - protect reg for emulation
    151					; dreg   - r5    - addr of register's table
    152					;	.word	reg	; reg's address
    153					;	.word	r.mask, r.copy
    154					;	.byte	r.rqst, r.stat
    155					;	.word	r.strt, r.reset
    156					; returned:
    157					;       c=0     - ok
    158					;        r0 - addr r.copy of reg-descriptor
    159					;       c=1     - no memory or busy reg
    160					;        r0=0  - no memory
    161					;        r0<>0 - addr of process-owner of register
    162
    163					 .macro proreg  n
    164					        mov     n,@#^o174160
    165					        nop
    166					 .endm
    167
    168					;---------------------------------------------------------
    169					; unpreg(reg)   - unprotect reg and free it's descriptor
    170					; reg   - r5    - addr of reg
    171
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-3


    172					 .macro unpreg  n
    173					        mov     n,@#^o174162
    174					        nop
    175					 .endm
    176
    177					;---------------------------------------------------------
    178					; waitint(mask) - makes process wait any interrupt
    179					; mask  - r5    - a mask to enable/disable external ints
    180					;		low byte - mask;
    181					;		m.tio  = 1 => need time-out:
    182					;				p.r3 - timer interval in ticks
    183					;				p.r4 - user defined parameter (will be
    184					;					copied to r2, if time-out occur)
    185					;		m.vrq  = 1 => enabled vectored ints
    186					; p.r0, p.r1, p.r2	- user defined and would be changed in
    187					;			situations mentioned below
    188					; returned:
    189					;       c=0     - reg's emulation int
    190					;        r0 / r1 <>0 - one or two r.strt-words from reg-descriptors
    191					;       c=1     - interrupt occur flag !!!
    192					;        r2 - 2nd word from vector - the interruptera, or
    193					;	    - a copy of r4 in case of time-out
    194					;  common:	contents of r0,r1,r2 changed only if reg's emulation needed
    195					;		and/or interrupt occur or time-out !!!
    196					;		in case of interrupt or time-out only r2 changed !!!
    197
    198					 .macro waitint n
    199					        mov     n,@#^o174164
    200					        nop
    201					 .endm
    202
    203					;---------------------------------------------------------
    204					; newromprocess (startaddr)
    205					; startaddr     - r5    - pc of creating process
    206					; returned:
    207					;       c=0     - process is created and r0 points to its descriptor
    208					;                 (r1-r6, ur0-ur7 - copy of parent's)
    209					;		- priority = max (077777)
    210					;       c=1     - no memory
    211
    212					 .macro newromp n
    213					        mov     n,@#^o174166
    214					        nop
    215					 .endm
    216
    217					;---------------------------------------------------------
    218					; setint (vec)          - set request for int on vector vec
    219					; vec   - r5    - vector (from v.low up to v.high)
    220
    221					.macro  setint  n
    222					        mov     n+vrqtbl-v.low+4, @#^o174170
    223					        nop
    224					.endm
    225
    226					;---------------------------------------------------------
    227					; resint (vec)          - reset int request for vector vec
    228					; vec   - r5    - vector
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-4


    229
    230					.macro  resint  n
    231					        mov     n+vrqtbl-v.low+4, @#^o174172
    232					        nop
    233					.endm
    234
    235					;---------------------------------------------------------
    236					; get4k(n4k)	- take contin. area of mem (n4k blocks in length)
    237					; 		from the lower memory
    238					; n4k	- r5	- length of area in 4k blocks.    1 <= n <= 16.
    239					;		max = 64k bytes
    240					; returned:
    241					;       c=0, r0 - contents of mmu reg to map the block
    242					;       c=1     - no memory for creation map or no free blocks
    243
    244					.macro  get4k	n
    245					        mov	n, @#^o174176
    246					        nop
    247					.endm
    248
    249					;---------------------------------------------------------
    250					; get8k(n8k)	- take contin. area of mem (n8k blocks in length)
    251					;		from the higher memory
    252					; n8k	- r5	- length of area in 8k blocks
    253					; returned:
    254					;	c=0, r0	= contents of mmu reg to map first block of all
    255					;	c=1, r0,- no free mem; r0 - length of max free area in 8k blocks;
    256					;		r0=0, if cannot allocate process's map
    257
    258					.macro	get8k	n
    259						mov	n, @#^o174200
    260						nop
    261					.endm
    262
    263					;---------------------------------------------------------
    264					; fremem(n8k,bln) - release n8k blocks of mem, starting from bln (reg mmu)
    265					; n8k	- r5	- num of 8k blocks to make free
    266					; bln	p.r0(r3)- starting mmu reg contents
    267					; returned:
    268					;		none
    269
    270					.macro	fremem	n
    271						mov	n, @#^o174202
    272						nop
    273					.endm
    274					.macro	fre4k	n
    275						mov	n, @#^o174174
    276						nop
    277					.endm
    278
    279					;---------------------------------------------------------
    280					; putbmap	- write process's mem-map (create if needed)
    281					; returned:
    282					;	c=0	- ok
    283					;	c=1	- cannot allocate mem-map table
    284
    285					.macro	putbmap	map
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-5


    286						mov	map, @#^o174204
    287						nop
    288					.endm
    289
    290					;---------------------------------------------------------
    291					; getbmap	- read process's mem-map
    292					; returned:
    293					;	c=0,r0	- ok, r0= length of mem-map in words
    294					;	c=1	- no mem-map for this process
    295
    296					.macro	getbmap	map
    297						mov	map, @#^o174206
    298						nop
    299					.endm
    300
    301					;---------------------------------------------------------
    302					; getsmap	- reads system's mem-map
    303					; returned:
    304					;	r0	- length of mem-map in bytes
    305
    306					.macro	getsmap	map
    307						mov	map, @#^o174210
    308						nop
    309					.endm
    310
    311					;---------------------------------------------------------
    312					; himpri(pri,proc)	- sets new priority pri to process proc
    313					; returned:	- none
    314
    315					.macro	himpri	pri
    316						mov	pri, @#^o174212
    317						nop
    318					.endm
    319
    320					;---------------------------------------------------------
    321					; newproc(desc,umap)	- creates new process
    322					; desc	- r5	- addr of descr.table in user mapping
    323					; umap	- p.r0	- addr of map for the proc in user mapping
    324					; returned:
    325					;	c=1	- no mem to create map or descriptor
    326
    327					.macro	newproc	desc
    328						mov	desc, @#^o174214
    329						nop
    330					.endm
    331					;--------------------------------------------------
    332					; mthlt(addr)	- mov  r0, addr/hlt
    333					.macro	mthlt addr
    334						mov	addr,	@#^o174216
    335						nop
    336					.endm
    337					;--------------------------------------------------
    338					; mfhlt(addr)	- mov addr/hlt, r0
    339					.macro	mfhlt addr
    340						mov	addr,	@#^o174220
    341						nop
    342					.endm
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-6


    343					;--------------------------------------------------
    344					;kilproc num_proc
    345					.macro	kilproc num
    346						mov	num,	@#^o174222
    347						nop
    348					.endm
    349					;--------------------------------------------------
    350					.macro	timeon
    351						clr	r0
    352						mthlt	#tcflg
    353					.endm
    354					;--------------------------------------------------
    355					.macro	timeoff
    356						mov	#1,	r0
    357						mthlt	#tcflg
    358					.endm
    359					;--------------------------------------------------
    360					; getpds(pds,area) - get process descriptor
    361					;	pds	- p.r0:	process descr or 0 - caller descr
    362					;	area:		area for descr, prolen bytes
    363					; return:	c=0	ok
    364					;		c=1	invalid descr
    365					.macro	getpds	area
    366						mov	area,	@#^o174224
    367						nop
    368					.endm
    369					;--------------------------------------------------
    370					; putpds(pds,area) - put process descriptor
    371					;	pds	- p.r0:	process descr or 0 - caller descr
    372					;	area:		area for descr, prolen bytes
    373					; return:	c=0	ok
    374					;		c=1	invalid descr
    375					.macro	putpds	area
    376						mov	area,	@#^o174226
    377						nop
    378					.endm
    379					;--------------------------------------------------
    380					; getrds(radr,area) - get register descriptor
    381					;	radr	- p.r0:	register adr
    382					;	area:		area for descr, reglen bytes
    383					; return:	c=0	ok
    384					;		c=1	invalid register
    385					.macro	getrds	area
    386						mov	area,	@#^o174230
    387						nop
    388					.endm
    389					;--------------------------------------------------
    390					; putrds(radr,area) - put register descriptor
    391					;	radr	- p.r0:	register adr
    392					;	area:		area for descr, reglen bytes
    393					; return:	c=0	ok
    394					;		c=1	invalid register
    395					.macro	putrds	area
    396						mov	area,	@#^o174232
    397						nop
    398					.endm
    399					;--------------------------------------------------
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-7


    400					; getpar(pds,area) - get process par contents
    401					;	pds	- p.r0:	process descr or 0 - caller descr
    402					;	area:		area for par contents, 20 bytes
    403					; return:	c=0	ok
    404					;		c=1	invalid descr
    405					.macro	getpar	area
    406						mov	area,	@#^o174234
    407						nop
    408					.endm
    409					;--------------------------------------------------
    410					; putpar(pds,area) - put process par contents
    411					;	pds	- p.r0:	process descr or 0 - caller descr
    412					;	area:		area for par contents, 20 bytes
    413					; return:	c=0	ok
    414					;		c=1	invalid descr
    415					.macro	putpar	area
    416						mov	area,	@#^o174236
    417						nop
    418					.endm
    419
    420					;************************************************************
    421					; halt-instructions
    422					;------------------------------------------------------------
    423					.macro	go			; ps:=cps
    424						.word	12		; pc:=cpc
    425					.endm				; return from halt-mode
    426					;------------------------------
    427					.macro	step			; ps:=cps
    428					        .word	16		; pc:=cpc
    429					.endm				; return from halt-mode (inhibit hlt-syg trap)
    430					;------------------------------
    431					.macro	rsel			; r0:=sw_reg
    432						.word	20		;
    433					.endm				; move sw_reg to r0
    434					;------------------------------
    435					.macro	mfus			; mov (r5)+/user, r0
    436						.word	21		;
    437					.endm				;
    438					;------------------------------
    439					.macro	rcpc			; r0:=cpc
    440						.word	22		;
    441					.endm				;
    442					;------------------------------
    443					.macro	rcps			; r0:=cps
    444						.word	24		;
    445					.endm				;
    446					;------------------------------
    447					.macro	mtus			; mov r0, -(r5)/user
    448						.word	31		;
    449					.endm				;
    450					;------------------------------
    451					.macro	wcpc			; cpc:=r0
    452						.word	32		;
    453					.endm				;
    454					;------------------------------
    455					.macro	wcps			; cps:=r0
    456						.word	34		;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-8


    457					.endm				;
    458					;------------------------------
    459
    460					;************************************************************
    461
    462						.sbttl	common definitions for bios monitor
    463
    464					.macro	dsect	adr
    465					.if nb	<adr>
    466						$$ = adr
    467					.iff
    468						$$ = 0
    469					.endc
    470					.endm	dsect
    471					.macro	dw	name,len
    472					.iif nb	<name>,	name	= $$
    473					.if nb	<len>
    474						$$ = $$+<<len>*2>
    475					.iff
    476						$$ = $$+2
    477					.endc
    478					.endm	dw
    479					.macro	db	name,len
    480					.iif nb	<name>,	name	= $$
    481					.if nb	<len>
    482						$$ = $$+<len>
    483					.iff
    484						$$ = $$+1
    485					.endc
    486					.endm	db
    487
    488		140000 			        l.reg	== 140000
    489		150000 				l.rda	== 150000
    490
    491		000500 				v.high	== 500	; the most high vector
    492		000060 				v.low	== 60	; the most lower vector
    493
    494	000000				dsect	100000		; bios static table
    495	000000				dw	heap      ;heap pointer
    496	000000				dw	maplen	  ;length of ram-bit-map in bytes
    497	000000				dw	freereg   ;pointer to first free register-descriptor
    498	000000				dw	freepr    ;pointer to first free process-descriptor
    499	000000				dw	freesem   ;pointer to first free semaphore
    500	000000				dw	freemap   ;pointer to first free proc-ram-map (32 bytes)
    501	000000				dw	memuse    ;pointer to monitor ram-map (32 bytes)
    502	000000				dw	running   ;pointer to current process
    503	000000				dw	readyque  ;pointer to head of queue of ready-to-run processes
    504	000000				dw	rdsucc    ;dummy process,
    505	000000				dw	rdpred    ; in ready-to-run queue
    506	000000				dw	timeque   ;pointer to head of queue of time-waiting processes
    507	000000				dw	tmsucc    ;dummy process,
    508	000000				dw	tmpred    ; in time-waiting queue
    509	000000				dw	top$$     ;pointer to allowed top og heap
    510	000000				dw	vrqflg	  ;flag of request for vectored int (only c.irq bit is used)
    511
    512	000000				dw	sav.r0		;; work area
    513	000000				dw	sav.r1		;;  for
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-9
Common definitions for bios monitor

    514	000000				dw	sav.r2		;;   console
    515	000000				dw	sav.r3		;;    and
    516	000000				dw	sav.r4		;;     debugger
    517	000000				dw	sav.r5		;;      module
    518	000000				dw	sav.sp		;;
    519	000000				dw	sav.pc		;;
    520	000000				dw	sav.ps		;;
    521
    522					 		;sync interrupt vectors
    523	000000				dw	v.cpuh ,2   ;halt-instruction
    524	000000				dw	v.tr4h ,2   ;trap to 4 in halt
    525	000000				dw	v.but  ,2   ;"stop" button on keyboard
    526	000000				dw	v.supr ,2   ;unexpected interrupt (no process waiting for it)
    527	000000				dw	v.2tio ,2   ;double time-out
    528							;async interrupt vectors
    529	000000				dw	v.init ,2   ;reset-instruction
    530	000000				dw	v.flop ,2   ;floppy disk int
    531	000000				dw	v.rcrd ,2   ;dl-receiver ready
    532	000000				dw	v.trrd ,2   ;dl-transmitter ready
    533	000000				dw	v.kbd  ,2   ;keyboard request
    534	000000				dw	v.scrn ,2   ;screen interrupt
    535	000000				dw	v.prrd ,2   ;printer ready
    536	000000				dw	v.slot ,2   ;request from slot
    537		000064 				veclen	== $$-v.cpuh
    538
    539							;masks to enable/disable interrupts
    540		000001 				m.init	==  1	;
    541		000002 				m.flop	==  2	;
    542		000004 				m.rcrd	==  4	;
    543		000010 				m.trrd	== 10	;
    544		000020 				m.kbd	== 20	;
    545		000040 				m.scrn	== 40	;
    546		000100 				m.prrd	==100	;
    547		000200 				m.slot	==200	;
    548
    549		000400 				m.tio	==000400	; time-out in waitint
    550		040000 				m.run	==040000	; proc is ready to run
    551		100000 				m.vrq	==100000	; can eat vectored ints
    552
    553	000000				dw	vrqtbl, <v.high-v.low+4/2> ; table for list+map of vectored ints
    554	000000				dw	pdptr		;pointer to first process-descriptor
    555	000000				dw	c.tim0		;cpu-clock counter
    556	000000				dw	c.tim1		;
    557	000000				dw	tcflg		;
    558
    559		100602 			 heap$$	= $$	; end of bios static table
    560
    561	000000				dsect	140000
    562	000000				dw	hstack	  ; bottom of halt-stack
    563
    564	000000				dsect			;register descriptor
    565	000000				dw	r.mask    ;bit-mask to restore reg
    566	000000				dw	r.copy    ;copy of r/o bits
    567	000000				db	r.rqst    ;requested operation on reg
    568	000000				db	r.stat    ;proper actions on reg
    569	000000				dw	r.proc    ;pointer to process to operate the reg
    570	000000				dw	r.strt	  ;parameter word for processing (user defined)
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-10
Common definitions for bios monitor

    571	000000				dw	r.reset	  ;this word moved to the reg on reset (nothing if -1)
    572		000014 				reglen	== $$
    573	000000				dsect			;process descriptor
    574	000000				dw	p.succ    ;pointer to succ proc in queues
    575	000000				dw	p.pred    ;pointer to pred proc in queues
    576	000000				dw	p.r0      ;contents of cpu regs
    577	000000				dw	p.r1
    578	000000				dw	p.r2
    579	000000				dw	p.r3
    580	000000				dw	p.r4
    581	000000				dw	p.r5
    582	000000				dw	p.sp
    583	000000				dw	p.pc
    584	000000				dw	p.ps
    585	000000				dw	p.ur0     ;contents of memory control regs
    586	000000				dw	p.ur1
    587	000000				dw	p.ur2
    588	000000				dw	p.ur3
    589	000000				dw	p.ur4
    590	000000				dw	p.ur5
    591	000000				dw	p.ur6
    592	000000				dw	p.ur7
    593	000000				dw	p.mask    ;bit-mask to desable ints during processing
    594								;(bit15=1 => can have vectored ints, i.e. simulated)
    595	000000				dw	p.cprc    ;pointer to process, waiting reg's emulation
    596	000000				dw	p.tim     ;time period for sleepping
    597	000000				dw	p.pri     ;priority of the process
    598	000000				dw	p.mem     ;pointer to ram-map for the process (or 0, if none)
    599	000000				dw	p.name,8. ;process name
    600	000000				dw	p.tim0	  ;
    601	000000				dw	p.tim1    ;
    602	000000				dw	p.dsucc	  ;ptr on succ
    603		000106 				prolen	== $$
    604
    605	000000				dsect			;semaphore
    606	000000				dw	s.cntr    ;sem's counter
    607	000000				dw	s.frst    ;pointer to queue of waiting processes
    608	000000				dw	s.succ    ;dummy queue-head of
    609	000000				dw	s.pred    ; waiting processes
    610		000010 				semlen	== $$
    611
    612					;************************************************************
    613
    614		161000 				piccsr	== 161000	 ; 8259
    615		161002 				picmr	== 161002
    616
    617		161010 				sndc0r	== 161010	 ; 8253.f
    618		161012 				sndc1r	== 161012	 ;
    619		161014 				sndc2r	== 161014
    620		161016 				sndcsr	== 161016
    621
    622		161020 				snlc0r	== 161020	 ; 8253.l
    623		161022 				snlc1r	== 161022	 ;
    624		161024 				snlc2r	== 161024
    625		161026 				snlcsr	== 161026
    626
    627		161030 				ppia	== 161030	 ; ppi
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 2-11
Common definitions for bios monitor

    628		161032 				ppib	== 161032
    629		000001 							b.ef0	==  1
    630		000002 							b.ef1	==  2
    631		000004 							b.int	==  4
    632		161034 				ppic	== 161034
    633		000010 							c.irq	== 10 ; ШЭТ.
    634		000004 							c.hlt	==  4 ; ШЭТ.
    635		161036 				ppip	== 161036
    636		000200 							i.hlt	==200
    637
    638
    639		161060 				dlbuf	== 161060	 ; 8251A RS
    640		161062 				dlcs	== 161062
    641
    642		161064 				kbdbuf	== 161064
    643		161066 				kbdcsr	== 161066	 ; 8279
    644
    645		161200 				hr0	== 161200	 ; mmu reg.
    646		161202 				hr1	== 161202
    647		161204 				hr2	== 161204
    648		161206 				hr3	== 161206
    649		161210 				hr4	== 161210
    650		161212 				hr5	== 161212
    651		161214 				hr6	== 161214
    652		161216 				hr7	== 161216
    653		161220 				ur0	== 161220
    654		161222 				ur1	== 161222
    655		161224 				ur2	== 161224
    656		161226 				ur3	== 161226
    657		161230 				ur4	== 161230
    658		161232 				ur5	== 161232
    659		161234 				ur6	== 161234
    660		161236 				ur7	== 161236
    661
    662
    663		000015 				cr      == 15
    664		000012 				lf      == 12
    665
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3
Common definitions for bios monitor

      1
      2					;	$BIOS		=   0
      3
      4					.if	DF	$BIOS
      5						ADD.REG		=  l.reg
      6						IDEcash		=  16.
      7					.iff
      8		140000 				ADD.REG		=  140000		; UR6
      9		000040 				IDEcash		=  32.
     10					.endc
     11
     12					;?????????????????????????????????????????????????????????????
     13					; WD1010-05 map description
     14					;
     15		161120 				id.buff  = 161120	;  data buffer
     16		161122 				id.err	 = id.buff+2	;  wr. precomp cyl.
     17		161124 				id.scnt  = id.buff+4	;  Sector count rg.
     18		161126 				id.snum  = id.buff+6	;  Sector number rg.
     19		161130 				id.cnlo  = id.buff+10	;  Cylinder addr lo.
     20		161132 				id.cnhi  = id.buff+12	;  Cylinder addr hi.
     21		161134 				id.sdh	 = id.buff+14	;  Sector:Disk:Head
     22		161136 				id.csr	 = id.buff+16	;  Command & status reg
     23		161114 				id.irq	 = 161114	;  interrupt, 4th bit of the head number
     24									;   and software reset
     25
     26		000060 				ide.add	= <id.err-hd.err>
     27
     28		000001 				ide$cnt	=  1		;
     29		000001 				ide$num =  1		;
     30		000342 				AutoPD	= 342		; = E2h Auto Power Down
     31
     32		161040 				hd.buff = 161040	;  data buffer
     33		161042 				hd.err	= 161042	;  wr. precomp cyl.
     34		000001 					e.dmnf	= 1	; data mark not found
     35		000002 					e.tr0	= 2	; track 000 not found
     36		000004 					e.ac	= 4	; cmd aborted
     37		000020 					e.idnf	=20	; ident not found or crc error
     38		000100 					e.crc	=100	; crc error /data field
     39		000200 					e.bad	=200	; bad-block detected
     40		161044 				hd.scnt = 161044	;  Sector count rg.
     41		161046 				hd.snum = 161046	;  Sector number rg.
     42		161050 				hd.cnlo = 161050	;  Cylinder addr lo.
     43		161052 				hd.cnhi = 161052	;  Cylinder addr hi.
     44		161054 				hd.sdh	= 161054	;  Sector:Disk:Head
     45		000001 					sdh0	= 1	; head 0 / side
     46		000002 					sdh1	= 2	; head 1 / dens.lo
     47		000002 					dens.lo = sdh1	;
     48		000004 					sdh2	= 4	; head 2 / f1sel
     49		000004 					f1sel	= sdh2	;
     50		000010 					sd0h	=10	; hdsel
     51		000020 					run	=20	; run
     52		000000 					s256	= 0	; sector size	= 256
     53		000040 					s512	=40	;		= 512
     54		000100 					s1024	=100	;		= 1024
     55		000140 					s128	=140	;		= 128
     56		000200 					x.ecc	=200	; ext for ECC
     57		000340 					i.sfree =340
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-1
Common definitions for bios monitor

     58		000240 					i.s512	=240
     59
     60		161056 				hd.csr	= 161056	;  Command & status reg
     61		000001 					s.err	= 1	;  error
     62		000002 					s.cmd	= 2	;  cmd in progress
     63		000010 					s.drq	=10	; sgl 'DRQ'
     64		000020 					s.sc	=20	; sgl 'SEEK COMPLETE'
     65		000040 					s.wf	=40	; sgl 'WRITE FAULT'
     66		000100 					s.rdy	=100	; sgl 'DISK READY'
     67		000200 					s.busy	=200	; busy
     68					;?????????????????????????????????????????????????????????????
     69		161070 				fdcsr	= 161070	;
     70		161072 				fdbuf	= 161072	;
     71		161076 				fdcnt	= 161076	;
     72		000001 					ba9	= 1	;
     73		000002 					ba10	= 2	;
     74		000020 					fd.ini	= 20	;
     75
     76		177132 				T1copy	= 177132			; еееее
     77		177134 				T2copy	= 177134			; еееее
     78		147132 				T1.copy	= <T1copy & 7777> + ADD.REG	; еееее
     79		147134 				T2.copy	= <T2copy & 7777> + ADD.REG	; еееее
     80
     81					;?????????????????????????????????????????????????????????????
     82					; Command`s format
     83					;?????????????????????????????????????????????????????????????
     84					;
     85		000020 				RESTORE =  20	;RESTORE + rate
     86		000160 				SEEK	= 160	;SEEK	 + rate
     87		000040 				RDSECT	=  40	;RDSECT  ! I ! M ! T
     88		000060 				WRSECT	=  60	;WRSECT      ! M ! T
     89		000100 				SCAN	= 100	;SCAN		 ! T
     90		000120 				FORMAT	= 120
     91		000010 					I  = 10 ; interrupt at end of cmd
     92		000004 					M  =  4 ; multiple sectors
     93		000001 					T  =  1 ; dis. retries
     94		000000 					r0.035	= 0
     95		000001 					r0.5	= 1
     96		000002 					R1.0	= 2
     97		000017 					r7.5	= 17
     98
     99					;?????????????????????????????????????????????????????????????
    100					;
    101		177130 				HDCBUF	== 177130
    102		000230 				HDCVEC	== 230
    103		000234 				FDCVEC	== 234
    104		000240 				IDEVEC	== 240
    105		000002 				M.HD	=  M.flop
    106		100112 				V.HD	=  V.flop
    107		000002 				M.IDE	=  M.HD
    108		100112 				V.IDE	=  V.HD
    109
    110		147130 				HDC.BUF = <HDCBUF & 7777> + ADD.REG
    111
    112					;?????????????????????????????????????????????????????????????
    113					.macro	fcmd,	cmd		;
    114						jsr	R5,	wrcmd	;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-2
Common definitions for bios monitor

    115						.word	cmd		;
    116					.endm				;
    117					;?????????????????????????????????????????????????????????????
    118					.macro	ERROR,	cod		;
    119						jsr	R5,	p.err	;
    120						.byte	5*16.+0,cod	;
    121					.endm				;
    122					;?????????????????????????????????????????????????????????????
    123					.macro	WHI.ONLY  mask,?l1	;если читают регистр, то не реагируем !
    124						.push	<R0,R1>
    125					l1:	clr	R0
    126						clr	R1
    127						WAITINT mask		; ждем прерываний по маске
    128						tst	R0
    129						bne	l1
    130						tst	R1
    131						bne	l1
    132						.pop	<R1,R0>
    133					.endm
    134					;?????????????????????????????????????????????????????????????
    135
    136	000000					.asect
    137		000000 				. = 0
    138	000000	041520 	000000 	000000 		.word	"PC, 0, 0, 0
	000006	000000
    139	000010	   111 	   104 	   105 		.asciz	"IDE+MFM (2804.4)"
	000013	   053 	   115 	   106
	000016	   115 	   040 	   050
	000021	   062 	   070 	   060
	000024	   064 	   056 	   064
	000027	   051 	   000
    140	000000					.psect
    141
    142	000000	000010 			bootd		:  .word	10		; no boot partition
    143	000002	000100 			bootw		:  .word	100		; no warm boot partition
    144	000004	   000 					   .byte	0		; motor on
    145	000005	   000 			bcnt		:  .byte	0
    146	000006	000000 			h.fail		:  .word	0
    147	000010	000000 			i.fail		:  .word	0
    148					;?????????????????????????????????????????????????????????????
    149		043011 			f.read		= 106*400+9.			; читать сектор(а)
    150		042411 			f.write 	= 105*400+9.			; писать сектор(а)
    151		046406 			f.form  	= 115*400+6.			; форматировать
    152		003402 			f.rec		=   7*400+2			; установка на 0 дорожку
    153		007403 			f.seek		=  17*400+3			; поиск дорожки
    154		002002 			f.sds		=   4*400+2			; чтение состояния
    155		004001 			f.sis		=  10*400+1
    156					;?????????????????????????????????????????????????????????????
    157	000012	   003 	   301 	   002 	f.spec		:  .byte	3,   12.*20+1, 2
    158					;?????????????????????????????????????????????????????????????
    159	000015	   106 			f.cmd		:  .byte	106
    160	000016	   000 			f.hds		:  .byte	0
    161	000017	   000 			f.cyl		:  .byte	0
    162	000020	   000 			f.head		:  .byte	0
    163	000021	   001 			f.sect		:  .byte	1
    164	000022	   002 			f.len		:  .byte	2
    165	000023	   037 			f.eot		:  .byte	37
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-3
Common definitions for bios monitor

    166	000024	   005 			f.gpl		:  .byte	5.
    167	000025	   377 			f.dtl		:  .byte	377
    168					;?????????????????????????????????????????????????????????????
    169	000026				s.st0		:  .blkb	1
    170	000027				s.st1		:  .blkb	1
    171	000030				s.st2		:  .blkb	1
    172	000031				s.cyl		:  .blkb	1
    173	000032				s.hd		:  .blkb	1
    174	000033				s.sec		:  .blkb	1
    175	000034				s.len		:  .blkb	1
    176	000035				s.sp		:  .blkb	1
    177					;?????????????????????????????????????????????????????????????
    178	000036				rdstat: 				; 7346
    179	000036	012700 	000026'			mov	#s.st0, R0		; регистр состояния
    180	000042	005067 	000004 			clr	2$			; пауза, что ли?
    181	000046	062727 	000001 		1$:	add	#1, (pc)+		;
    182	000052	000000 			2$:	.word	0			;
    183	000054	103414 				bcs	3$			;
    184	000056	105737 	161070 			tstb	@#fdcsr			; а как там винт?
    185	000062	100371 				bpl	1$			; не выставил, пока что...
    186	000064	122737 	000277 	161070 		cmpb	#277, @#fdcsr		; fdcsr < 277 ? да ...
    187	000072	103005 				bcc	3$			;
    188	000074	113720 	161072 			movb	@#fdbuf, (R0)+		; пишем регистры состояния...
    189	000100	022700 	000036'			cmp	#s.st0+8., R0		; все регистры?
    190	000104	103360 				bcc	1$			; нет
    191	000106	000207 			3$:	return				;
    192
    193					;?????????????????????????????????????????????????????????????
    194	000110				f.reset:				;
    195	000110	012737 	000020 	161076 		mov	#20, @#fdcnt		;
    196	000116	012701 	002000 			mov	#2000, R1		;
    197	000122	005037 	161076 			clr	@#fdcnt			;
    198	000126	077101 				sob	R1, .			;
    199
    200	000130	012700 	000012'		f.set:	mov	#f.spec, R0		;
    201	000134	012701 	000003 			mov	#3, R1			;
    202	000140	000404 				br	wrcmd1			;
    203
    204					;?????????????????????????????????????????????????????????????
    205	000142	012700 	000015'		wrcmd:	mov	#f.cmd, R0		;
    206	000146	112501 				movb	(R5)+, R1		; cnt
    207	000150	112510 				movb	(R5)+, (R0)		; cmd
    208
    209	000152	005067 	000002 		wrcmd1:	clr	2$			;
    210
    211	000156	060127 			1$:	add	R1, (pc)+		;
    212	000160	000000 			2$:	.word	0			;
    213	000162	103415 				bcs	4$			;
    214	000164	105737 	161070 			tstb	@#fdcsr			;
    215	000170	100372 				bpl	1$			;
    216	000172	122737 	000277 	161070 		cmpb	#277, @#fdcsr		;
    217	000200	103406 				bcs	4$			;
    218	000202	112027 				movb	(R0)+, (pc)+		;
    219	000204	000000 			3$:	.word	0			;
    220	000206	016737 	177772 	161072 		mov	3$, @#fdbuf		;
    221	000214	077120 				sob	R1, 1$			;
    222	000216	000205 			4$:	rts	R5			;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-4
Common definitions for bios monitor

    223
    224					;?????????????????????????????????????????????????????????????
    225	000220	012567 	000012 		p.err:	mov	(R5)+, ierr		;
    226	000224					DSTRIN	#ierr			;
	000224	012737 	000236'	174102 		mov	#ierr,	@#^o174102
	000232	000240 				nop
    227	000234	000205 				rts	R5			;
    228
    229	000236	   000 	   000 	   022 	ierr:	.byte	0,0,22,172,263,233
	000241	   172 	   263 	   233
    230
    231					;?????????????????????????????????????????????????????????????
    232
    233	000244	000207 			s.t1:	return					; еееее
    234
    235	000246	023727 	147132 	123456 	s.t2:	cmp	@#T1.copy, #123456		; еееее
    236	000254	000240 				<nop>
    237	000256	001006 				bne	1$				; еееее
    238	000260	013700 	147134 			mov	@#T2.copy, R0			; еееее
    239	000264	000240 				<nop>
    240	000266	010037 	147130 			mov	R0, @#HDC.BUF			; еееее
    241	000272	000240 				<nop>
    242	000274	005037 	147132 		1$:	clr	@#T1.copy			; еееее
    243	000300	000240 				<nop>
    244	000302	005037 	147134 			clr	@#T2.copy			; еееее
    245	000306	000240 				<nop>
    246	000310	000207 				return
    247
    248	000312				xread:
    249	000312	012702 	001357'		xwr:	mov	#xerr,	 R2
    250	000316	012705 	161042 			mov	#hd.err, R5
    251	000322	116767 	001036 	001004 		movb	xsdh,	D955$
    252	000330	042767 	177760 	000776 		bic	#^C17,	D955$
    253	000336	005046 				clr	-(sp)
    254	000340	116716 	001020 			movb	xsdh,	 (sp)
    255	000344	032716 	000010 			bit	#10,	 (sp)
    256	000350	001403 				beq	1$
    257	000352	052716 	177400 			bis	#177400, (sp)
    258	000356	000402 				br	2$
    259
    260	000360	042716 	000340 		1$:	bic	#i.sfree, (sp)
    261	000364	052716 	000050 		2$:	bis	#<s512+sd0h>, (sp)
    262	000370	132767 	000010 	006351 		bitb	#10,	h.err+1		; dev 10..17 ?
    263	000376	001402 				beq	3$
    264	000400	042716 	000010 			bic	#sd0h,	(sp)		; select flop
    265
    266	000404	112225 			3$:	movb	(R2)+,	(R5)+
    267	000406	005205 				inc	R5
    268	000410	022705 	161052 			cmp	#<hd.sdh-2>, R5
    269	000414	103373 				bcc	3$
    270
    271	000416	111622 				movb	(sp),	(R2)+
    272	000420	012625 				mov	(sp)+,	(R5)+
    273
    274					;	?????????????????????
    275
    276	000422	016767 	000734 	000700 		mov	xcyl,	D95$
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-5
Common definitions for bios monitor

    277	000430	132767 	000010 	006311 		bitb	#10,	h.err+1
    278	000436	001404 				beq	4$
    279	000440	042767 	177776 	000666 		bic	#^C1,	D955$
    280	000446	000462 				br	F.RW
    281
    282	000450	132712 	000020 		4$:	bitb	#20,	(R2)
    283	000454	001405 				beq	5$
    284	000456	105367 	177323 			decb	bcnt
    285	000462	142767 	177774 	177315 		bicb	#^C3,	bcnt
    286
    287	000470	116737 	177311 	161076 	5$:	movb	bcnt, @#fdcnt		; buf.addr
    288	000476	111215 				movb	(R2), (R5)
    289	000500					DSTRING #D96$
	000500	012737 	001340'	174102 		mov	#D96$,	@#^o174102
	000506	000240 				nop
    290	000510					DVAL	#D95$
	000510	012737 	001330'	174104 		mov	#D95$,	@#^o174104
	000516	000240 				nop
    291	000520					DVAL	#D955$
	000520	012737 	001334'	174104 		mov	#D955$,	@#^o174104
	000526	000240 				nop
    292
    293	000530					WHI.ONL #M.HD
	000530	010046 				mov	R0,-(6.)
	000532	010146 				mov	R1,-(6.)
	000534	005000 			30000$:	clr	R0
	000536	005001 				clr	R1
	000540	012737 	000002 	174164 	        mov     #M.HD,@#^o174164
	000546	000240 			        nop
	000550	005700 				tst	R0
	000552	001370 				bne	30000$
	000554	005701 				tst	R1
	000556	001366 				bne	30000$
	000560	012601 				mov	(6.)+,R1
	000562	012600 				mov	(6.)+,R0
    294					;	WAITINT #M.HD
    295	000564	116737 	177215 	161076 		movb	bcnt,	@#fdcnt		; buf.addr
    296	000572	000261 				<sec>
    297	000574	032715 	000001 			bit	#s.err,	(R5)
    298	000600	001001 				bne	6$
    299	000602	000241 				<clc>
    300	000604	032737 	000100 	161042 	6$:	bit	#e.crc, @#hd.err	;hd.err
    301	000612	000207 				return
    302
    303					;?????????????????????????????????????????????????????????????
    304	000614				f.rw:	.push	<R0,R1,R3>
	000614	010046 				mov	R0,-(6.)
	000616	010146 				mov	R1,-(6.)
	000620	010346 				mov	R3,-(6.)
    305	000622	016702 	177170 			mov	f.hds, R2
    306	000626	105067 	177164 			clrb	f.hds
    307	000632	116700 	000526 			movb	xsdh, R0
    308	000636	106000 				rorb	R0
    309	000640	106167 	177152 			rolb	f.hds
    310	000644	116767 	177146 	177146 		movb	f.hds, f.head
    311	000652	106167 	177140 			rolb	f.hds
    312	000656	106000 				rorb	R0
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-6
Common definitions for bios monitor

    313	000660	106000 				rorb	R0
    314	000662	112767 	000333 	000456 		movb	#333, d97$+2
    315	000670	103003 				bcc	1$
    316	000672	112767 	000073 	000446 		movb	#73, d97$+2
    317
    318	000700	106167 	177112 		1$:	rolb	f.hds
    319	000704	116767 	000452 	177105 		movb	xcyl, f.cyl
    320	000712	166702 	177100 			sub	f.hds, R2
    321	000716	116767 	000437 	177075 		movb	xsnum, f.sect
    322	000724	042702 	000376 			bic	#376, R2
    323	000730	001430 				beq	2$
    324					;	????????????????????????
    325	000732					FCMD	f.seek			;
	000732	004567 	177204 			jsr	R5,	wrcmd	;
	000736	007403 				.word	f.seek		;
    326	000740	012703 	000050 			mov	#50, R3			;
    327	000744					WHI.ONL	#m.hd+m.tio		;
	000744	010046 				mov	R0,-(6.)
	000746	010146 				mov	R1,-(6.)
	000750	005000 			30001$:	clr	R0
	000752	005001 				clr	R1
	000754	012737 	000402 	174164 	        mov     #m.hd+m.tio,@#^o174164
	000762	000240 			        nop
	000764	005700 				tst	R0
	000766	001370 				bne	30001$
	000770	005701 				tst	R1
	000772	001366 				bne	30001$
	000774	012601 				mov	(6.)+,R1
	000776	012600 				mov	(6.)+,R0
    328					;	WAITINT #m.hd+m.tio		;
    329	001000					FCMD	f.sis			;
	001000	004567 	177136 			jsr	R5,	wrcmd	;
	001004	004001 				.word	f.sis		;
    330	001006	004767 	177024 			call	rdstat			;
    331					;	????????????????????????
    332
    333	001012	116737 	176767 	161076 	2$:	movb	bcnt, @#fdcnt		; buf.addr
    334	001020	122767 	000044 	000337 		cmpb	#rdsect+m, xcsr		;
    335	001026	001004 				bne	3$			;
    336	001030					FCMD	f.read			;
	001030	004567 	177106 			jsr	R5,	wrcmd	;
	001034	043011 				.word	f.read		;
    337	001036	000444 				br	5$			;
    338					;	????????????????????????
    339	001040	122767 	000064 	000317 	3$:	cmpb	#wrsect+m, xcsr		;
    340	001046	001005 				bne	4$			;
    341	001050	005715 				tst	(R5)			; hd.csr
    342	001052					FCMD	f.write			;
	001052	004567 	177064 			jsr	R5,	wrcmd	;
	001056	042411 				.word	f.write		;
    343	001060	000433 				br	5$			;
    344					;	????????????????????????
    345	001062	122767 	000120 	000275 	4$:	cmpb	#format, xcsr		;
    346	001070	001103 				bne	8$			;
    347	001072					.push	f.hds			;
	001072	016746 	176720 			mov	f.hds,-(6.)
    348	001076	112767 	000002 	176713 		movb	#2, f.cyl		;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-7
Common definitions for bios monitor

    349	001104	116467 	000012 	176706 		movb	p$sn(R4), f.head	;
    350	001112	116467 	000014 	176701 		movb	p$rl(R4), f.sect	;
    351	001120	116467 	000016 	176674 		movb	p$rl+2(R4), f.len	;
    352	001126	005715 				tst	(R5)			; hd.csr
    353	001130					FCMD	f.form			;
	001130	004567 	177006 			jsr	R5,	wrcmd	;
	001134	046406 				.word	f.form		;
    354	001136	112767 	000002 	176656 		movb	#2, f.len		;
    355	001144					.pop	f.hds			;
	001144	012667 	176646 			mov	(6.)+,f.hds
    356					;	????????????????????????
    357	001150				5$:	DSTRING #D97$			;
	001150	012737 	001344'	174102 		mov	#D97$,	@#^o174102
	001156	000240 				nop
    358	001160					DVAL	#D95$			;
	001160	012737 	001330'	174104 		mov	#D95$,	@#^o174104
	001166	000240 				nop
    359	001170					DVAL	#D955$
	001170	012737 	001334'	174104 		mov	#D955$,	@#^o174104
	001176	000240 				nop
    360	001200	012703 	000062 			mov	#50., R3		;
    361	001204					WHI.ONL	#<m.hd+m.tio>		;
	001204	010046 				mov	R0,-(6.)
	001206	010146 				mov	R1,-(6.)
	001210	005000 			30002$:	clr	R0
	001212	005001 				clr	R1
	001214	012737 	000402 	174164 	        mov     #<m.hd+m.tio>,@#^o174164
	001222	000240 			        nop
	001224	005700 				tst	R0
	001226	001370 				bne	30002$
	001230	005701 				tst	R1
	001232	001366 				bne	30002$
	001234	012601 				mov	(6.)+,R1
	001236	012600 				mov	(6.)+,R0
    362					;	WAITINT #<m.hd+m.tio>		;
    363	001240	005702 				tst	R2			;
    364	001242	001410 				beq	7$			;
    365					;	????????????????????????
    366	001244	012702 	001000 			mov	#1000, R2		;
    367
    368	001250	005037 	161076 		6$:	clr	@#fdcnt			;
    369	001254	077203 				sob	R2, 6$			;
    370	001256	052767 	000010 	005462 		bis	#10, h.err		;
    371					;	????????????????????????
    372	001264	004767 	176546 		7$:	call	rdstat			;
    373	001270	116737 	176511 	161076 		movb	bcnt, @#fdcnt		; buf.addr
    374	001276	005715 				tst	(R5)			; hd.csr
    375	001300	122767 	000077 	176520 	8$:	cmpb	#77, s.st0		;
    376	001306	103004 				bcc	10$			;
    377	001310	112767 	177777 	176501 	9$:	movb	#-1, f.cyl		;
    378	001316	000240 				<nop>
    379
    380	001320				10$:	.pop	<R3,R1,R0>		;
	001320	012603 				mov	(6.)+,R3
	001322	012601 				mov	(6.)+,R1
	001324	012600 				mov	(6.)+,R0
    381	001326	000207 				return				;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-8
Common definitions for bios monitor

    382
    383					;?????????????????????????????????????????????????????????????
    384	001330	000000 	005060 		D95$		:  .WORD	0,10.*400+<3*16.>
    385	001334	000000 	005045 		D955$		:  .WORD	0,10.*400+<2*16.+5>
    386	001340	   062 	   002 	   263 	D96$		:  .BYTE	3*16.+2,2,263,233
	001343	   233
    387	001344	   062 	   002 	   333 	D97$		:  .BYTE	3*16.+2,2,333,132
	001347	   132
    388	001350	   062 	   002 	   072 	D98$		:  .BYTE	3*16.+2,2,072,153
	001353	   153
    389	001354	000000 			D100$		:  .WORD	0
    390					;	????????????????????????
    391
    392	001356	   000 					   .byte	 0
    393	001357	   377 			xerr		:  .byte	-1		; прекомп/ошибка
    394	001360	   000 			xscnt		:  .byte	 0		; число секторов
    395	001361	   377 			xsnum		:  .byte	-1		; номер сектора
    396	001362	000000 			xcyl		:  .word	 0		; цилиндр
    397	001364	   040 			xsdh		:  .byte	 s512		; головка
    398	001365	   040 			xcsr		:  .byte	 rdsect		; команда
    399					;?????????????????????????????????????????????????????????????
    400
    401	001366	177132 	000000 	000000 	T1tbl		:  .word	 T1copy, 0, 0, 2000,   s.t1,-1	; еееее
	001374	002000 	000244'	177777
    402	001402	177134 	000000 	000000 	T2tbl		:  .word	 T2copy, 0, 0, 2000,   s.t2,-1	; еееее
	001410	002000 	000246'	177777
    403	001416	177130 	000000 	000000 	HDBTBL		:  .word	 HDCBUF, 0, 0, 2000, H.WBUF,-1
	001424	002000 	003600'	177777
    404	001432	   111 	   104 	   105 	pname		:  .asciz	"IDE+MFM (2804.4)"
	001435	   053 	   115 	   106
	001440	   115 	   040 	   050
	001443	   062 	   070 	   060
	001446	   064 	   056 	   064
	001451	   051 	   000
    405					.EVEN
    406
    407					;?????????????????????????????????????????????????????????????
    408	001454				hdcini::
    409	001454					.exit
	001454	104350 				EMT	^o350
    410
    411	001456					SETPRI	#30
	001456	012737 	000030 	174152 	        mov     #30,@#^o174152
	001464	000240 			        nop
    412	001466					UNPVEC	#V.HD
	001466	012737 	100112 	174156 	        mov     #V.HD,@#^o174156
	001474	000240 			        nop
    413	001476	005000 				clr	R0
    414	001500					PROVEC	#V.HD
	001500	012737 	100112 	174154 	        mov     #V.HD,@#^o174154
	001506	000240 			        nop
    415
    416	001510					UNPREG	#hdcbuf
	001510	012737 	177130 	174162 	        mov     #hdcbuf,@#^o174162
	001516	000240 			        nop
    417	001520					PROREG	#hdbtbl 		;
	001520	012737 	001416'	174160 	        mov     #hdbtbl,@#^o174160
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-9
Common definitions for bios monitor

	001526	000240 			        nop
    418	001530					UNPREG	#T1copy			; еееее
	001530	012737 	177132 	174162 	        mov     #T1copy,@#^o174162
	001536	000240 			        nop
    419	001540					UNPREG	#T2copy			; еееее
	001540	012737 	177134 	174162 	        mov     #T2copy,@#^o174162
	001546	000240 			        nop
    420	001550					PROREG	#T1tbl			; еееее
	001550	012737 	001366'	174160 	        mov     #T1tbl,@#^o174160
	001556	000240 			        nop
    421	001560					PROREG	#T2tbl			; еееее
	001560	012737 	001402'	174160 	        mov     #T2tbl,@#^o174160
	001566	000240 			        nop
    422
    423	001570	005037 	147130 			clr	@#HDC.BUF
    424	001574	005720 				tst	(R0)+			;
    425	001576	010067 	005112 			mov	R0, hb.copy 		;
    426
    427					.if	DF	$BIOS
    428						CALL	PROT.A			; ++++++++++++++++++++++ Сделано
    429					.endc
    430
    431	001602	013737 	161210 	161230 		mov	@#HR4,	@#UR4
    432	001610	013737 	161212 	161232 		mov	@#HR5,	@#UR5
    433	001616	005037 	161234 			clr	@#UR6
    434										; При поиске ошибке - неожиданное
    435										; зависание
    436					;	????????????????????????
    437
    438	001622	012705 	161056 		93$:	mov	#hd.csr, R5		; регистр состояния - в R5
    439	001626	005715 				tst	(R5)			; reset h.int
    440	001630	005045 				clr	-(R5)			; select flop
    441	001632	004567 	176252 			jsr	R5, f.reset 		; init FDC
    442	001636	012703 	000144 			mov	#2*50., R3		; wait
    443	001642	012704 	006210'			mov	#f.cb0, R4		; параметр при T/O
    444
    445	001646	016415 	000004 		1$:	mov	p$hb(R4), (R5)		; выбираем некий флоп
    446	001652					FCMD	f.rec			; на ноль
	001652	004567 	176264 			jsr	R5,	wrcmd	;
	001656	003402 				.word	f.rec		;
    447	001660					WHI.ONL	#<M.TIO+M.HD>		;+ ждать только прерывания
	001660	010046 				mov	R0,-(6.)
	001662	010146 				mov	R1,-(6.)
	001664	005000 			30003$:	clr	R0
	001666	005001 				clr	R1
	001670	012737 	000402 	174164 	        mov     #<M.TIO+M.HD>,@#^o174164
	001676	000240 			        nop
	001700	005700 				tst	R0
	001702	001370 				bne	30003$
	001704	005701 				tst	R1
	001706	001366 				bne	30003$
	001710	012601 				mov	(6.)+,R1
	001712	012600 				mov	(6.)+,R0
    448	001714					FCMD	f.sis			; ставим бит читаем состояния
	001714	004567 	176222 			jsr	R5,	wrcmd	;
	001720	004001 				.word	f.sis		;
    449	001722	004767 	176110 			call	rdstat			; читаем состояние
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-10
Common definitions for bios monitor

    450	001726	005127 	000000 			com	#0			; &&'&%%% с флопом...
    451	001732	001345 				bne	1$			; не все закончилось...
    452	001734	005702 				tst	R2			; а что случилось?
    453	001736	001006 				bne	2$			; прерывание...
    454	001740	132767 	000300 	176060 		bitb	#300,	s.st0		; ошибка чтения?
    455	001746	001002 				bne	2$			; да...
    456	001750	012714 	040000 			mov	#pm.off, (R4)		; ставим, что флоп работает...
    457
    458	001754	062704 	000024 		2$:	add	#par.len, R4		; берем следующий флоп
    459	001760	005127 	000000 			com	#0			; и так до ?1
    460	001764	001330 				bne	1$			; ...
    461
    462					;	????????????????????????
    463	001766	012725 	000010 			mov	#sd0h, (R5)+		; hd.sdh, select hd0
    464	001772	012704 	000024 			mov	#20., R4		; ждем 20 раз по секунде...
    465	001776	012703 	000012 		3$:	mov	#10., R3		; ждем секунду...
    466	002002					WHI.ONL	#M.TIO			;+ ждать только прерывания
	002002	010046 				mov	R0,-(6.)
	002004	010146 				mov	R1,-(6.)
	002006	005000 			30004$:	clr	R0
	002010	005001 				clr	R1
	002012	012737 	000400 	174164 	        mov     #M.TIO,@#^o174164
	002020	000240 			        nop
	002022	005700 				tst	R0
	002024	001370 				bne	30004$
	002026	005701 				tst	R1
	002030	001366 				bne	30004$
	002032	012601 				mov	(6.)+,R1
	002034	012600 				mov	(6.)+,R0
    467	002036	032715 	000100 			bit	#s.rdy, (R5)		; hd.csr - выставлен?
    468	002042	001005 				bne	4$			; да!
    469	002044	077424 				sob	R4, 3$			; подождем, пока не T/O
    470	002046					ERROR	201			; err #1
	002046	004567 	176146 			jsr	R5,	p.err	;
	002052	   120 	   201 			.byte	5*16.+0,201	;
    471	002054	000430 				br	fail			; поставим h.fail
    472
    473					;	????????????????????????
    474	002056	012715 	000020 		4$:	mov	#RESTORE, (R5)		; установим на 0
    475	002062	012703 	000372 			mov	#5.*50., R3		; 5 (20) секунд - максимум
    476	002066					WHI.ONL	#<M.HD+M.TIO>		;+ ждать только прерывания
	002066	010046 				mov	R0,-(6.)
	002070	010146 				mov	R1,-(6.)
	002072	005000 			30005$:	clr	R0
	002074	005001 				clr	R1
	002076	012737 	000402 	174164 	        mov     #<M.HD+M.TIO>,@#^o174164
	002104	000240 			        nop
	002106	005700 				tst	R0
	002110	001370 				bne	30005$
	002112	005701 				tst	R1
	002114	001366 				bne	30005$
	002116	012601 				mov	(6.)+,R1
	002120	012600 				mov	(6.)+,R0
    477	002122	032715 	000001 			bit	#s.err, (R5)		; hd.csr
    478	002126	001405 				beq	ok.MFM			; нет ошибки - на "OK:"
    479	002130					ERROR	362			; err #2
	002130	004567 	176064 			jsr	R5,	p.err	;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-11
Common definitions for bios monitor

	002134	   120 	   362 			.byte	5*16.+0,362	;
    480
    481	002136	005267 	175644 		fail:	inc	h.fail			; нет хард'а
    482
    483					;	????????????????????????	  проверим IDE
    484
    485	002142	004767 	004736 		ok.MFM:	call	IDE.res
    486	002146	004767 	004762 			call	IDE.skip
    487	002152	001033 				bne	1$
    488	002154	012737 	000020 	161136 		mov	#RESTORE, @#id.csr	; установим на 0
    489	002162	012703 	000310 			mov	#<4.*50.>, R3		; 5 (20) секунд - максимум
    490	002166	012704 	177777 			mov	#-1,	R4		; Просто число не равное M.IDE
    491	002172					WHI.ONL	#<M.IDE+M.TIO>		;+ ждать только прерывания
	002172	010046 				mov	R0,-(6.)
	002174	010146 				mov	R1,-(6.)
	002176	005000 			30006$:	clr	R0
	002200	005001 				clr	R1
	002202	012737 	000402 	174164 	        mov     #<M.IDE+M.TIO>,@#^o174164
	002210	000240 			        nop
	002212	005700 				tst	R0
	002214	001370 				bne	30006$
	002216	005701 				tst	R1
	002220	001366 				bne	30006$
	002222	012601 				mov	(6.)+,R1
	002224	012600 				mov	(6.)+,R0
    492	002226	020402 				cmp	R4,	R2		; Это есть копия R4?
    493	002230	001404 				beq	1$			;  а раз так ,то IDE отсутствует...
    494	002232	032737 	000001 	161136 		bit	#s.err, @#id.csr	; id.csr
    495	002240	001412 				beq	ok			; нет ошибки - на "OK:"
    496	002242				1$:	ERROR	301			; err #7
	002242	004567 	175752 			jsr	R5,	p.err	;
	002246	   120 	   301 			.byte	5*16.+0,301	;
    497
    498	002250				fail.IDE:
    499	002250	005267 	175534 			inc	i.fail
    500	002254	005767 	175526 			tst	h.fail
    501	002260	001402 				beq	OK
    502	002262	000167 	000406 			jmp	loop0
    503
    504					;???????????????????????????????????????
    505	002266	012704 	000312'		ok:	mov	#xread, R4		;
    506	002272	004714 				call	(R4)			;
    507	002274	103526 				bcs	foreign 		;
    508	002276	012700 	000520 		1$:	mov	#par.fre, R0		;
    509	002302	012701 	161040 			mov	#hd.buff, R1		;
    510	002306	005711 			2$:	tst	(R1)			;
    511	002310	077002 				sob	R0, 2$			;
    512
    513					;	????????????????????????
    514	002312	012700 	000260 			mov	#par.siz, R0		;
    515	002316	010003 				mov	R0, R3			;
    516	002320	012702 	005730'			mov	#h0.sec, R2		;
    517	002324	111122 			3$:	movb	(R1), (R2)+		;
    518	002326	077002 				sob	R0, 3$			;
    519	002330	026227 	177776 	123456 		cmp	-2(R2), #123456		; signature
    520	002336	001407 				beq	5$			;
    521	002340					ERROR	343			; err #3
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-12
Common definitions for bios monitor

	002340	004567 	175654 			jsr	R5,	p.err	;
	002344	   120 	   343 			.byte	5*16.+0,343	;
    522	002346	105042 			4$:	clrb	-(R2)			; clear both par. tab !
    523	002350	077302 				sob	R3, 4$			;
    524	002352	000167 	000316 			jmp	loop0			;
    525
    526					;	????????????????????????
    527	002356	016700 	003346 		5$:	mov	h0.sec, R0		;
    528	002362	001414 				beq	bad			;
    529	002364	070067 	003342 			mul	h0.head, R0		;
    530	002370	010100 				mov	R1, R0			;
    531	002372	001410 				beq	bad			;
    532	002374	070067 	003334 			mul	h0.track,R0		; R1 - lo, R0 - hi
    533	002400	020167 	003332 			cmp	R1, h0.size 		;
    534	002404	001003 				bne	bad			;
    535	002406	020067 	003326 			cmp	R0, h0.size+2
    536	002412	001403 				beq	cont			;
    537	002414				bad:	ERROR	213			; ERR #4
	002414	004567 	175600 			jsr	R5,	p.err	;
	002420	   120 	   213 			.byte	5*16.+0,213	;
    538
    539					;?????????????????????????????????????????????????????????????
    540					; total disk space OK!
    541					; now test all partitions to be correct
    542
    543	002422	005003 			cont:	clr	R3			;
    544	002424	012702 	005746'			mov	#p.cb0, R2		; part # * size
    545	002430	042762 	040000 	000000 	1$:	bic	#pm.off, p$cb(R2)	; part. off
    546	002436	016200 	000012 			mov	p$sn(R2), R0		;
    547	002442	001434 				beq	3$			;
    548	002444	070062 	000006 			mul	p$hn(R2), R0		;
    549	002450	010100 				mov	R1, R0			;
    550	002452	001430 				beq	3$			;
    551	002454	070062 	000002 			mul	p$cn(R2), R0		;
    552	002460	020162 	000020 			cmp	R1, p$sz(R2)		;
    553	002464	001023 				bne	3$			;
    554	002466	020062 	000022 			cmp	R0, p$sz+2(R2)
    555	002472	001020 				bne	3$			;
    556	002474	052762 	040000 	000000 		bis	#pm.off, p$cb(R2)	; size OK -> part. on
    557	002502	032712 	010000 			bit	#pm.nb, (R2)		;
    558	002506	001402 				beq	2$			;
    559	002510	010367 	175264 			mov	R3, bootd		;
    560	002514	032712 	004000 		2$:	bit	#pm.wb, (R2)		;
    561	002520	001405 				beq	3$			;
    562	002522	010304 				mov	R3, R4			;
    563	002524	072427 	000003 			ash	#3, R4			;
    564	002530	010467 	175246 			mov	R4, bootw		;
    565	002534	062702 	000024 		3$:	add	#par.len, R2		;
    566	002540	005203 				inc	R3			;
    567	002542	022703 	000010 			cmp	#8., R3			;
    568	002546	001330 				bne	1$			;
    569	002550	000451 				br	loop0			;
    570					;	????????????????????????????????
    571	002552				foreign:				;
    572	002552	012703 	001361'			mov	#xsnum,R3		; hd.snum
    573	002556	105213 				incb	(R3)			;
    574	002560	100445 				bmi	loop0			;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-13
Common definitions for bios monitor

    575	002562	004714 				call	(R4)			;
    576	002564	103001 				bcc	1$			;
    577	002566	001771 				beq	foreign 		;
    578					;	????????????????????????????????
    579	002570	111367 	003162 		1$:	movb	(R3),	p.sb0		;
    580	002574	105213 			2$:	incb	(R3)			;
    581	002576	004714 				call	(R4)			;
    582	002600	103375 				bcc	2$			;
    583	002602	001374 				bne	2$			;
    584	002604	111367 	003150 			movb	(R3),	p.sn0		;
    585	002610	166767 	003142 	003142 		sub	p.sb0,	p.sn0		;
    586	002616	105313 				decb	(R3)			;
    587					;	????????????????????????????????
    588	002620	012703 	001364'			mov	#xsdh,	R3		; hd.sdh
    589	002624	112713 	000050 			movb	#<s512+sd0h>, (R3)
    590	002630	105313 			3$:	decb	(R3)			;
    591	002632	004714 				call	(R4)			;
    592	002634	103001 				bcc	4$			;
    593	002636	001774 				beq	3$			;
    594	002640	142713 	177770 		4$:	bicb	#^C7,	(R3)		;
    595	002644	105213 				incb	(R3)			;
    596	002646	111367 	003102 			movb	(R3),	p.hn0		;
    597	002652	012767 	002000 	003070 		mov	#1024., p.cn0		;
    598	002660	012767 	177770 	003100 		mov	#177770,p.sz0		;
    599	002666	052767 	040000 	003052 		bis	#pm.off,p.cb0		;
    600
    601					;?????????????????????????????????????????????????????????????
    602					;
    603	002674	005767 	175110 		loop0:	tst	i.fail			; IDE_hard_disk_drive exists?
    604	002700	001402 				beq	1$			; Да
    605	002702	000167 	000574 			jmp	i.loop0			; Нет - выйдем с ошибкой
    606
    607	002706	105067 	176445 		1$:	clrb	xerr			; Прекомпенсация = 0, т.к. дорожка =0
    608	002712	112767 	000001 	176440 		movb	#ide$cnt, xscnt		; Номер сектора  (ide$cnt=1)
    609	002720	112767 	000001 	176433 		movb	#ide$num, xsnum		; Число секторов (ide$num=1)
    610	002726	005067 	176430 			clr	xcyl			; Цилиндр = 0
    611	002732	112767 	000240 	176424 		movb	#i.s512, xsdh		; Не принципиально IDE.xxx поправит
    612	002740	112767 	000040 	176417 		movb	#rdsect, xcsr		; Читать сектора
    613	002746	112767 	000020 	003773 		movb	#20, h.err+1		; Устройство  - IDE_hdd
    614
    615	002754	004767 	004326 			call	IDE.send		; Загрузить регистры контроллера
    616	002760	001167 				bne	i.foreign		; Ошибка? -> i.foreign
    617
    618	002762					WHI.ONL	#M.IDE			; Прочитали Partition?
	002762	010046 				mov	R0,-(6.)
	002764	010146 				mov	R1,-(6.)
	002766	005000 			30007$:	clr	R0
	002770	005001 				clr	R1
	002772	012737 	000002 	174164 	        mov     #M.IDE,@#^o174164
	003000	000240 			        nop
	003002	005700 				tst	R0
	003004	001370 				bne	30007$
	003006	005701 				tst	R1
	003010	001366 				bne	30007$
	003012	012601 				mov	(6.)+,R1
	003014	012600 				mov	(6.)+,R0
    619	003016	032737 	000001 	161136 		bit	#s.err,	@#id.csr	; Да - без ошибок?
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-14
Common definitions for bios monitor

    620	003024	001145 				bne	i.foreign		; Были ошибки =(
    621
    622	003026	012700 	000250 			mov	#<par.fre/2>, R0	;
    623	003032	012701 	161120 			mov	#id.buf, R1		;
    624
    625	003036	005046 				clr	-(sp)
    626	003040	011116 			2$:	mov	(R1), (sp)		;
    627	003042	077002 				sob	R0, 2$			;
    628	003044	005726 				tst	(sp)+
    629
    630					;	????????????????????????
    631
    632	003046	012700 	000007 			mov	#<ipar.add/2>, R0	;
    633	003052	012702 	005712'			mov	#i0.sec, R2		;
    634	003056	011122 			3$:	mov	(R1), (R2)+		;
    635	003060	077002 				sob	R0, 3$			;
    636	003062	012700 	000121 			mov	#<ipar.siz/2>, R0	;
    637	003066	012702 	006450'			mov	#ip.CB0, R2		;
    638	003072	011122 			4$:	mov	(R1), (R2)+		;
    639	003074	077002 				sob	R0, 4$			;
    640	003076	026227 	177776 	123456 		cmp	-2(R2), #123456		; signature
    641	003104	001417 				beq	7$			;
    642	003106					ERROR	153			; err #5
	003106	004567 	175106 			jsr	R5,	p.err	;
	003112	   120 	   153 			.byte	5*16.+0,153	;
    643	003114	012700 	000121 			mov	#<ipar.siz/2>, R0	;
    644	003120	005042 			5$:	clr	-(R2)			; clear both par. tab !
    645	003122	077002 				sob	R0, 5$			;
    646	003124	012700 	000007 			mov	#<ipar.add/2>, R0	;
    647	003130	012702 	005712'			mov	#i0.sec, R2		;
    648	003134	005022 			6$:	clr	(R2)+			;
    649	003136	077002 				sob	R0, 6$			;
    650	003140	000167 	000174 			jmp	i.foreign		;
    651
    652					;	????????????????????????
    653	003144	016700 	002542 		7$:	mov	i0.sec, R0		;
    654	003150	001414 				beq	i.bad			;
    655	003152	070067 	002536 			mul	i0.head, R0		;
    656	003156	010100 				mov	R1, R0			;
    657	003160	001410 				beq	i.bad			;
    658	003162	070067 	002530 			mul	i0.track, R0		; R1 - lo, R0 - hi
    659	003166	020167 	002526 			cmp	R1, i0.size 		;
    660	003172	001003 				bne	i.bad			;
    661	003174	020067 	002522 			cmp	R0, i0.size+2
    662	003200	001403 				beq	i.caunt			;
    663	003202				i.bad:	ERROR	173			; ERR #6
	003202	004567 	175012 			jsr	R5,	p.err	;
	003206	   120 	   173 			.byte	5*16.+0,173	;
    664
    665	003210				i.caunt:
    666	003210	005003 				clr	R3			;
    667	003212	012702 	006450'			mov	#ip.cb0, R2		; part # * size
    668	003216	042762 	040000 	000000 	1$:	bic	#pm.off, p$cb(R2)	; part. off
    669	003224	016200 	000012 			mov	p$sn(R2), R0		;
    670	003230	001434 				beq	3$			;
    671	003232	070062 	000006 			mul	p$hn(R2), R0		;
    672	003236	010100 				mov	R1, R0			;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-15
Common definitions for bios monitor

    673	003240	001430 				beq	3$			;
    674	003242	070062 	000002 			mul	p$cn(R2), R0		;
    675	003246	020162 	000020 			cmp	R1, p$sz(R2)		;
    676	003252	001023 				bne	3$			;
    677	003254	020062 	000022 			cmp	R0, p$sz+2(R2)
    678	003260	001020 				bne	3$			;
    679	003262	052762 	040000 	000000 		bis	#pm.off, p$cb(R2)	; size OK -> part. on
    680	003270	032712 	010000 			bit	#pm.nb, (R2)		;
    681	003274	001402 				beq	2$			;
    682	003276	010367 	174476 			mov	R3, bootd		;
    683					;	bis	#20, bootd
    684	003302	032712 	004000 		2$:	bit	#pm.wb, (R2)		;
    685	003306	001405 				beq	3$			;
    686	003310	010304 				mov	R3, R4			;
    687	003312	072427 	000003 			ash	#3, R4			;
    688	003316	010467 	174460 			mov	R4, bootw		;
    689					;	bis	#1, bootw
    690	003322	062702 	000024 		3$:	add	#ipar.len, R2		;
    691	003326	005203 				inc	R3			;
    692	003330	022703 	000010 			cmp	#8., R3			;
    693	003334	001330 				bne	1$			;
    694	003336	000461 				br	i.loop0			;
    695					;	????????????????????????????????
    696
    697	003340				i.foreign:
    698	003340	012704 	161136 			mov	#id.csr, R4
    699	003344	012714 	000354 			mov	#354, (R4)
    700	003350	012705 	177777 			mov	#177777, R5
    701	003354	032714 	000010 		1$:	bit	#s.drq, (R4)
    702	003360	001003 				bne	2$
    703	003362	005305 				dec	R5
    704	003364	001373 				bne	1$
    705	003366	000442 				br	i.f.bad
    706
    707	003370	005737 	161120 		2$:	tst	@#id.buff			; лажа
    708	003374	013767 	161120 	003050 		mov	@#id.buff, ip.CN0		; число цилиндров
    709	003402	005737 	161120 			tst	@#id.buff			; бред
    710	003406	013767 	161120 	003042 		mov	@#id.buff, ip.HN0		; число головок
    711	003414	005737 	161120 			tst	@#id.buff			; буфер для дорожки
    712	003420	005737 	161120 			tst	@#id.buff			; число байт на сектор
    713	003424	013767 	161120 	003030 		mov	@#id.buff, ip.SN0		; число секторов
    714	003432	032714 	000010 		3$:	bit	#s.drq, (R4)
    715	003436	001403 				beq	4$
    716	003440	005737 	161120 			tst	@#id.buff
    717	003444	000772 				br	3$
    718
    719	003446	016701 	003010 		4$:	mov	ip.SN0, R1
    720	003452	070167 	003000 			mul	ip.HN0, R1
    721	003456	010100 				mov	R1, R0
    722	003460	070067 	002766 			mul	ip.CN0, R0
    723	003464	010067 	003002 			mov	R0, ip.SZ0+2		; HIGH
    724	003470	010167 	002774 			mov	R1, ip.SZ0		; LOW
    725	003474				i.f.bad:
    726	003474	052767 	140000 	002746 		bis	#<pm.off+pm.st1>, ip.cb0
    727
    728	003502				i.loop0:
    729
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-16
Common definitions for bios monitor

    730					.if	DF	$BIOS
    731						CALL	UNPR.A			;+++
    732					.endc
    733	003502	016737 	174272 	147130 		mov	bootd, @#HDC.BUF 	;	?????
    734	003510	052737 	000200 	147130 		bis	#200,  @#HDC.BUF 	;	?????
    735
    736					.if	DF	$BIOS
    737						CALL	PROT.A			;+++
    738					.endc
    739
    740	003516	005005 			loop:	clr	R5			;
    741	003520	132767 	000020 	175636 		bitb	#run, xsdh		;
    742	003526	001406 				beq	10$			;
    743	003530	012703 	000144 			mov	#100., R3		;
    744	003534	012704 	000020 			mov	#run, R4		;
    745	003540	012705 	000400 			mov	#m.tio,	R5		;
    746
    747	003544	012700 	005706'		10$:	mov	#ret, R0		;
    748	003550	010001 				mov	R0, R1			;
    749	003552	005002 				clr	R2			;
    750	003554					WAITINT R5			;
	003554	010537 	174164 		        mov     R5,@#^o174164
	003560	000240 			        nop
    751	003562					.push	#loop			;
	003562	012746 	003516'			mov	#loop,-(6.)
    752	003566	140237 	161054 			bicb	R2, @#hd.sdh		;
    753	003572	140267 	175566 			bicb	R2, xsdh		;
    754	003576	004011 				jsr	R0, (R1)		;
    755
    756					;?????????????????????????????????????????????????????????????
    757					;
    758	003600				h.wbuf:
    759					.if	DF	$BIOS
    760						CALL	UNPR.A			;+++
    761					.endc
    762	003600	005077 	003110 			clr	@hb.copy		; обнулим копию НАШЕГО регистра
    763
    764					.if	DF	$BIOS
    765						CALL	PROT.A			;+++
    766					.endc
    767	003604					.push	#h.exit 		; точка H.EXIT - в стек
	003604	012746 	005462'			mov	#h.exit,-(6.)
    768	003610	112767 	000003 	174167 		movb	#3, bcnt		;
    769	003616	005067 	003124 			clr	h.err			; номер устройства - 0, hard
    770	003622	005000 				clr	R0			; карту обратившегося процесса
    771	003624					GETPAR	#hr.map 		;  хватаем
	003624	012737 	006716'	174234 		mov	#hr.map,	@#^o174234
	003632	000240 				nop
    772
    773					.if	DF	$BIOS
    774						mov	#10, hr.map+16		;+++ deny access for upper window
    775						CALL	UNPR.A			;+++
    776					.endc
    777
    778	003634	016701 	147130'			mov	hdc.buf, R1		; берем регистр
    779	003640	042767 	177776 	147130'		bic	#177776, hdc.buf 	; скинем хвост...
    780
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-17
Common definitions for bios monitor

    781					.if	DF	$BIOS
    782						CALL	PROT.A			;+++
    783					.endc
    784
    785	003646	004767 	005030 			call	SETMAP			; пишем в UR'ы
    786	003652	012702 	006736'			mov	#hr.blk, R2		; и вот параметры
    787	003656	012122 				mov	(R1)+, (R2)+		; hr.blk
    788	003660	012122 				mov	(R1)+, (R2)+		; hr.dev
    789	003662	010205 				mov	R2, R5			; hr.dev - в R5
    790	003664	012122 				mov	(R1)+, (R2)+		; hr.buf
    791	003666	112767 	000044 	175471 		movb	#RDSECT!M, xcsr		;
    792	003674	011112 				mov	(R1), (R2)		; hr.cntw
    793	003676	001527 				beq	8$			;
    794	003700	100004 				bpl	1$			;
    795	003702	112767 	000064 	175455 		movb	#WRSECT!M, xcsr
    796	003710	005412 				neg	(R2)			;
    797
    798					;	????????????????????????????????
    799	003712	114504 			1$:	movb	-(R5), R4		; hr.dev+1
    800	003714	042704 	177740 			bic	#^c37, R4		;
    801	003720	020427 	000020 			cmp	R4, #20 		; ?
    802	003724	103402 				blo	2$			; ?
    803	003726	042704 	000010 			bic	#10, R4 		; ?
    804
    805	003732	110467 	003011 		2$:	movb	R4, h.err+1		; dev.num for late..
    806	003736	012703 	000024 			mov	#par.len, R3		; блину информационной части
    807	003742	070304 				mul	R4, R3			; умножим на номер устр-ва
    808	003744	062703 	005746'			add	#p.cb0, R3		; прибавим смещение от начального
    809	003750	010304 				mov	R3, R4			;
    810	003752	132767 	000010 	002767 		bitb	#10, h.err+1		;
    811	003760	001017 				bne	4$			;
    812	003762	132767 	000020 	002757 		bitb	#20, h.err+1		; ?
    813	003770	001407 				beq	3$			; ?
    814	003772	142767 	000017 	175365 		bicb	#17, xcsr
    815	004000	005767 	174004 			tst	i.fail			; ?
    816	004004	001446 				beq	5$			; ?
    817	004006	000460 				br	7$			; ?
    818	004010	005767 	173772 		3$:	tst	h.fail			;
    819	004014	001443 				beq	6$			;
    820	004016	000454 				br	7$			;
    821
    822					;	????????????????????????????????
    823	004020	005724 			4$:	tst	(R4)+			; skip sign
    824	004022	116467 	000015 	173763 		movb	p$rl+1(R4), f.spec+1	;
    825	004030	004567 	174074 			jsr	R5, f.set		; step rate
    826	004034	132767 	000020 	175322 		bitb	#run, xsdh		;
    827	004042	001030 				bne	6$			;
    828	004044	152767 	000020 	175312 		bisb	#run, xsdh		;
    829	004052	152737 	000020 	161054 		bisb	#run, @#hd.sdh		;
    830	004060	012703 	000020 			mov	#20, R3			;
    831	004064					WHI.ONL	#M.TIO			;
	004064	010046 				mov	R0,-(6.)
	004066	010146 				mov	R1,-(6.)
	004070	005000 			30008$:	clr	R0
	004072	005001 				clr	R1
	004074	012737 	000400 	174164 	        mov     #M.TIO,@#^o174164
	004102	000240 			        nop
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-18
Common definitions for bios monitor

	004104	005700 				tst	R0
	004106	001370 				bne	30008$
	004110	005701 				tst	R1
	004112	001366 				bne	30008$
	004114	012601 				mov	(6.)+,R1
	004116	012600 				mov	(6.)+,R0
    832	004120	000401 				br	6$
    833
    834					;	????????????????????????????????
    835	004122	005724 			5$:	tst	(R4)+			; skip sign
    836	004124	016701 	002612 		6$:	mov	hr.buf,	R1		;
    837	004130	004767 	004546 			call	setmap			;
    838	004134	032714 	040000 			bit	#pm.off, (R4)		; а не выключен ли этот диск?
    839	004140	001007 				bne	9$			; да...
    840	004142	124527 	000360 			cmpb	-(R5), #360		; hr.dev
    841	004146	001431 				beq	14$			;
    842	004150	052767 	000010 	002570 	7$:	bis	#10, h.err		;
    843	004156	000207 			8$:	return				;
    844
    845					;??????????????????????????????????????????????????????
    846
    847	004160	105745 			9$:	tstb	-(R5)			; hr.dev
    848	004162	001002 				bne	10$			; read/write
    849	004164	000167 	000624 			jmp	34$
    850	004170	122715 	000373 		10$:	cmpb	#373, (R5)		; spfun getsize
    851	004174	001013 				bne	13$			;
    852	004176	016411 	000020 			mov	p$sz(R4), (R1)		;
    853	004202	005764 	000000 			tst	p$cb(R4)		;
    854	004206	100001 				bpl	11$			;
    855	004210	005311 				dec	(R1)			;
    856	004212	000207 			11$:	return				;
    857
    858	004214	052767 	000040 	002524 	12$:	bis	#40, h.err		;
    859	004222	000207 				return				;
    860					;	????????????????????????????????
    861
    862	004224	122715 	000360 		13$:	cmpb	#360, (R5)		;
    863	004230	001064 				bne	23$			;
    864	004232	005367 	002506 		14$:	dec	hr.cntw			;
    865	004236	001366 				bne	12$			; key not match
    866	004240	012702 	000024 			mov	#par.len, R2		;
    867	004244	132767 	000010 	002475 		bitb	#10, h.err+1		;
    868	004252	001015 				bne	16$			;
    869
    870	004254	132767 	000020 	002465 		bitb	#20, h.err+1		; ?
    871	004262	001405 				beq	15$			; ?
    872	004264	012704 	005712'			mov	#i0.sec, R4		; ?
    873	004270	012702 	000016 			mov	#<i0.gap3-i0.sec+2>, R2 ; ?
    874	004274	000404 				br	16$			; ?
    875
    876	004276	012704 	005730'		15$:	mov	#h0.sec, R4		;
    877	004302	012702 	000260 			mov	#<h0.sign-h0.sec+2>, R2
    878
    879	004306	132767 	000020 	175051 	16$:	bitb	#20, xcsr		;
    880	004314	001415 				beq	20$			;
    881
    882	004316	112124 			17$:	movb	(R1)+, (R4)+		;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-19
Common definitions for bios monitor

    883	004320	077202 				sob	R2, 17$			;
    884	004322	132767 	000020 	002417 		bitb	#20, h.err+1		; ?
    885	004330	001406 				beq	19$			; ?
    886	004332	012704 	006450'			mov	#ip.cb0, R4		; ?
    887	004336	012702 	000242 			mov	#<ih0.sign-ip.cb0+2>, R2; ?
    888	004342	112124 			18$:	movb	(R1)+, (R4)+		; ?
    889	004344	077202 				sob	R2, 18$ 		; ?
    890	004346	000207 			19$:	return				;
    891
    892	004350	112421 			20$:	movb	(R4)+, (R1)+		;
    893	004352	077202 				sob	R2,	20$		;
    894	004354	132767 	000020 	002365 		bitb	#20, h.err+1		; ?
    895	004362	001406 				beq	22$			; ?
    896	004364	012704 	006450'			mov	#ip.cb0, R4		; ?
    897	004370	012702 	000242 			mov	#<ih0.sign-ip.cb0+2>, R2; ?
    898	004374	112421 			21$:	movb	(R4)+, (R1)+		; ?
    899	004376	077202 				sob	R2, 21$ 		; ?
    900	004400	000207 			22$:	return				;
    901
    902					;	????????????????????????????????
    903
    904	004402	122715 	000362 		23$:	cmpb	#362,	(R5)		;
    905	004406	001402 				beq	24$			;
    906	004410	000167 	000212 			jmp	30$
    907
    908	004414	022767 	054322 	002322 	24$:	cmp	#-123456, hr.cntw	;
    909	004422	001144 				bne	32$			;
    910	004424	010103 				mov	R1, R3			;
    911	004426	012702 	001360'			mov	#xscnt, R2		;
    912	004432	116722 	001272 			movb	h0.sec, (R2)+		; xscnt
    913	004436	116722 	001302 			movb	h0.gap3, (R2)+		; xsnum
    914
    915	004442	016701 	002270 		25$:	mov	hr.blk, R1		; Format
    916	004446	005000 				clr	R0			;
    917	004450	071064 	000006 			div	p$hn(R4), R0		; R1 - head, R0 - cyl
    918	004454	066401 	000004 			add	p$hb(R4), R1		;
    919	004460	026400 	000002 			cmp	p$cn(R4), R0		;
    920	004464	101523 				blos	32$			;
    921	004466	066400 	000000 			add	p$cb(R4), R0		;
    922	004472	042700 	174000 			bic	#174000, R0		;
    923					;	????????????????????????????????
    924	004476	010022 				mov	R0, (R2)+		; xcyl
    925	004500	142712 	000017 			bicb	#17, (R2)		; xsdh
    926	004504	142712 	000340 			bicb	#i.sfree, (R2)
    927	004510	152712 	000040 			bisb	#s512, (R2)
    928
    929	004514	150122 				bisb	R1, (R2)+		; xsdh !!!!
    930	004516	112712 	000120 			movb	#format, (R2)		; xcsr
    931					;	????????????????????????????????
    932	004522	010301 				mov	R3, R1			;
    933	004524	012703 	000400 			mov	#256., R3		;
    934	004530	012700 	161040 			mov	#hd.buf, R0		;
    935
    936	004534	132767 	000020 	002205 		bitb	#20, h.err+1		; ?
    937	004542	001417 				beq	28$			; ?
    938	004544	004767 	004032 			call	sec.w
    939
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-20
Common definitions for bios monitor

    940	004550	105737 	161136 		26$:	tstb	@#id.csr		; ?
    941	004554	100775 				bmi	26$			; ?
    942	004556	000261 				<sec>				; ?
    943	004560	032737 	000001 	161136 		bit	#s.err, @#id.csr	; ?
    944	004566	001001 				bne	27$			; ?
    945	004570	000241 				<clc>				; ?
    946	004572	032737 	000100 	161122 	27$:	bit	#e.crc, @#id.err	; ?id.err
    947	004600	000207 				return
    948
    949	004602	116737 	173177 	161076 	28$:	movb	bcnt, @#fdcnt		;
    950	004610	005737 	161054 			tst	@#hd.sdh		;
    951
    952	004614	112110 			29$:	movb	(R1)+, (R0)		;
    953	004616	112110 				movb	(R1)+, (R0)		;
    954	004620	077303 				sob	R3, 29$			;
    955	004622	000167 	173464 			jmp	xwr			;
    956					;???????????????????????????????????????
    957	004626	122715 	000361 		30$:	cmpb	#361, (R5)		; hr.dev
    958	004632	001044 				bne	33$			;
    959	004634	005367 	002104 			dec	hr.cntw			;
    960	004640	001035 				bne	32$			;
    961	004642	022767 	123456 	002066 		cmp	#123456, hr.blk		;
    962	004650	001031 				bne	32$			;
    963	004652	012705 	006744'			mov	#hr.cntw, R5		;
    964	004656	005015 				clr	(R5)			;
    965	004660	012703 	000400 			mov	#400, R3		; cntw
    966	004664	012700 	001360'			mov	#xscnt, R0		;
    967	004670	132767 	000020 	002051 		bitb	#20, h.err+1		; ?
    968	004676	001410 				beq	31$			; ?
    969	004700	112720 	000001 			movb	#ide$cnt, (R0)+ 	; ?
    970	004704	112720 	000001 			movb	#ide$num, (R0)+ 	; ?
    971	004710	005020 				clr	(R0)+			; ?
    972	004712	112720 	000240 			movb	#i.s512, (R0)+		; ?
    973	004716	000566 				br	43$			; ?
    974
    975	004720	012720 	177401 		31$:	mov	#177401, (R0)+		; xscnt, xsnum
    976	004724	005020 				clr	(R0)+			; xcyl
    977	004726	142710 	000017 			bicb	#17, (R0)		; xsdh	!!!!
    978	004732	000560 				br	43$			;
    979					;???????????????????????????????????????
    980	004734	052767 	000040 	002004 	32$:	bis	#40, h.err		;
    981	004742	000207 				return				;
    982					;???????????????????????????????????????
    983	004744	122715 	000374 		33$:	cmpb	#374, (R5)		; hr.dev - Auto Power Down
    984	004750	001371 				bne	32$
    985	004752	132767 	000020 	001767 		bitb	#20, h.err+1
    986	004760	001765 				beq	32$
    987	004762	016700 	001750 			mov	hr.blk,	R0
    988	004766	042700 	177400 			bic	#177400, R0
    989					;	clrb	xerr
    990	004772	110067 	174362 			movb	R0,	xscnt		; 1F2 - по 5 секунд задержка
    991					;	clrb	xsnum
    992					;	clr	xcyl
    993					;	clrb	xsdh
    994	004776	112767 	000342 	174361 		movb	#AutoPD, xcsr
    995	005004	004767 	002276 			call	IDE.send
    996	005010	001351 				bne	32$
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-21
Common definitions for bios monitor

    997	005012	000207 				return
    998					;???????????????????????????????????????
    999	005014	005714 			34$:	tst	(R4)			; start from 1 or 2: bypass part. sec
   1000	005016	100002 				bpl	35$			;
   1001	005020	005267 	001712 			inc	hr.blk			;
   1002	005024	132767 	000020 	174333 	35$:	bitb	#20, xcsr		; write cmd ?
   1003	005032	001403 				beq	36$			;
   1004	005034	032714 	020000 			bit	#pm.rw, (R4)		;
   1005	005040	001335 				bne	32$			; read only err
   1006
   1007					;???????????????????????????????????????
   1008
   1009	005042	005000 			36$:	clr	R0			;
   1010	005044	012702 	001360'			mov	#xscnt, R2		;
   1011	005050	012705 	006745'			mov	#hr.cntw+1,R5		;
   1012	005054	111512 				movb	(R5), (R2)		;
   1013	005056	120045 				cmpb	R0, -(R5)		;
   1014	005060	005512 				adc	(R2)			;
   1015
   1016					;	????????????????????????????????
   1017	005062	016701 	001650 			mov	hr.blk,	R1		;
   1018	005066	016403 	000012 			mov	p$sn(R4), R3		;
   1019	005072	071003 				div	R3, R0			; R1 = rel sector adr, R0 = h*c
   1020	005074	160103 				sub	R1, R3			;
   1021	005076	066401 	000010 			add	p$sb(R4), R1		;
   1022					;	????????????????????????????????
   1023	005102	120312 				cmpb	R3, (R2)		;
   1024	005104	103001 				bcc	37$			;
   1025	005106	110312 				movb	R3, (R2)		;
   1026
   1027	005110	132767 	000020 	001631 	37$:	bitb	#20, h.err+1
   1028	005116	001006 				bne	38$
   1029	005120	122712 	000004 			cmpb	#4, (R2)		;
   1030	005124	103010 				bhis	39$			;
   1031	005126	112712 	000004 			movb	#4, (R2)		;
   1032	005132	000405 				br	39$			;+++
   1033	005134	122712 	000040 		38$:	cmpb	#IDECASH, (R2)		;+++ ограничиваем кол. блоков
   1034	005140	103002 				bhis	39$			;+++ длиной окна - 8 КБайт
   1035	005142	112712 	000040 			movb	#IDECASH, (R2)		;+++ (надо сделать по-другому)
   1036	005146	112203 			39$:	movb	(R2)+, R3		; число секторов
   1037	005150	042703 	177400 			bic	#^C377, R3
   1038	005154	110367 	172625 			movb	R3, bcnt		;
   1039	005160	105467 	172621 			negb	bcnt			;
   1040	005164	142767 	177774 	172613 		bicb	#^C3, bcnt		;
   1041	005172	060367 	001540 			add	R3, hr.blk		;
   1042	005176	000303 				swab	R3			;
   1043	005200	160315 				sub	R3, (R5)		; wcnt
   1044	005202	100001 				bpl	40$			;
   1045	005204	061503 				add	(R5), R3		;
   1046										;
   1047					;	????????????????????????????????
   1048
   1049	005206	132767 	000020 	001533 	40$:	bitb	#20, h.err+1
   1050	005214	001402 				beq	41$
   1051	005216	066701 	000466 			add	i0.SBEG, R1
   1052
   1053	005222	110122 			41$:	movb	R1, (R2)+		; xsnum
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-22
Common definitions for bios monitor

   1054	005224	010001 				mov	R0, R1			;
   1055	005226	005000 				clr	R0			;
   1056	005230	071064 	000006 			div	p$hn(R4),R0		; R1 = rel head adr, R0 = cyl
   1057	005234	066401 	000004 			add	p$hb(R4),R1		;
   1058	005240	026400 	000002 			cmp	p$cn(R4),R0		;
   1059	005244	003003 				bgt	42$			;
   1060	005246	105167 	001474 			comb	h.err			;
   1061	005252	000207 				return				;
   1062										;
   1063	005254	066400 	000000 		42$:	add	p$cb(R4), R0		;
   1064	005260	042700 	174000 			bic	#174000, R0		;
   1065	005264	010022 				mov	R0, (R2)+		; xcyl
   1066	005266	142712 	000017 			bicb	#17, (R2)		; xsdh !!!!
   1067	005272	150112 				bisb	R1, (R2)		; xsdh
   1068					;	????????????????????????????????
   1069	005274	014501 			43$:	mov	-(R5), R1		; hr.buf
   1070	005276	060315 				add	R3, (R5)		;
   1071	005300	060325 				add	R3, (R5)+		;
   1072	005302	004767 	003374 			call	setmap			;
   1073					;	????????????????????????????????
   1074	005306	012700 	161040 		44$:	mov	#hd.buf, R0		;
   1075	005312	132767 	000020 	174045 		bitb	#20, xcsr		;
   1076	005320	001425 				beq	49$			;
   1077					;	????????????????????????????????
   1078
   1079	005322	132767 	000020 	001417 		bitb	#20, h.err+1
   1080	005330	001403 				beq	45$
   1081
   1082	005332	004767 	003244 			call	sec.w
   1083	005336	000436 				br	53$			;+
   1084
   1085	005340	116737 	172441 	161076 	45$:	movb	bcnt,	@#fdcnt		; write
   1086	005346	005737 	161054 			tst	@#hd.sdh		; bdir := write
   1087
   1088	005352	112110 			46$:	movb	(R1)+,	(R0)		;
   1089	005354	112110 				movb	(R1)+,	(R0)		;
   1090	005356	077303 				sob	R3, 46$			;
   1091
   1092	005360	005715 			47$:	tst	(R5)			; wcnt
   1093	005362	100004 				bpl	49$			;
   1094										;
   1095	005364	010310 			48$:	mov	R3, (R0)		;
   1096	005366	010310 				mov	R3, (R0)		;
   1097	005370	005215 				inc	(R5)			;
   1098	005372	100774 				bmi	48$			;
   1099
   1100					; ???????????????????????????????????????
   1101
   1102	005374	132767 	000020 	001345 	49$:	bitb	#20, h.err+1
   1103	005402	001403 				beq	51$
   1104
   1105	005404	004767 	003072 		50$:	call	sec.r
   1106	005410	000411 				br	53$
   1107
   1108	005412	004767 	172674 		51$:	call	xwr
   1109
   1110	005416	132767 	000020 	173741 		bitb	#20, xcsr		;
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-23
Common definitions for bios monitor

   1111	005424	001003 				bne	53$			;
   1112
   1113	005426	111021 			52$:	movb	(R0), (R1)+		;
   1114	005430	111021 				movb	(R0), (R1)+		;
   1115	005432	077303 				sob	R3, 52$			;
   1116										;
   1117	005434	103406 			53$:	bcs	55$			;
   1118	005436	005767 	001302 			tst	hr.cntw			;
   1119	005442	003402 				ble	54$			;
   1120	005444	000167 	177372 			jmp	36$
   1121	005450	000207 			54$:	return				;
   1122
   1123	005452	052767 	000377 	001266 	55$:	bis	#377, h.err
   1124	005460	000207 				return
   1125
   1126					;??????????????????????????????????????????????????????????????????????????
   1127					;                              SUBROUTINE
   1128					;		Смотрим на результат выполнения пред. команды,
   1129					;		 ставим/нет биты ошибок и выставляем прерывания
   1130					;		 для RT-11.
   1131					;
   1132					;		Called from: entry point of the H.WBUF subroutine
   1133					;??????????????????????????????????????????????????????????????????????????
   1134
   1135	005462				h.exit:
   1136
   1137					.if	DF	$BIOS
   1138						CALL	UNPR.A			;+++
   1139					.endc
   1140
   1141	005462	016701 	147130'			MOV	HDC.BUF, R1
   1142
   1143					.if	DF	$BIOS
   1144						CALL	PROT.A			;+++
   1145					.endc
   1146
   1147	005466	106700 				mfps	R0			;+
   1148	005470	132767 	000010 	001251 		bitb	#10,	h.err+1		; Flop ?
   1149	005476	001416 				beq	3$			; Нет
   1150
   1151	005500	132767 	000300 	172320 		bitb	#300,	s.st0		; Да, это - флоп, что с байтом
   1152	005506	001403 				beq	1$			;  состояния?
   1153	005510	156767 	172313 	001230 		bisb	s.st1,	h.err		; Есть ошибка...
   1154
   1155	005516	006001 			1$:	ror	R1			; Надо выставлять вектор?
   1156	005520	103056 				bcc	7$			; Нет - пропустим
   1157	005522					SETINT	#fdcvec			; Вектор флопа
	005522	012737 	100326 	174170 	        mov     #fdcvec+vrqtbl-v.low+4, @#^o174170
	005530	000240 			        nop
   1158	005532	000451 				br	7$			; И на выход
   1159
   1160					;??????????????????????????????????????????????????????????????????????????
   1161
   1162	005534	132767 	000020 	001205 	3$:	bitb	#20, h.err+1		; А, может это - IDE?
   1163	005542	001426 				beq	5$			; Нет - MFM hard_disk...
   1164	005544	012705 	000240 			mov	#idevec, R5		;  ???
   1165	005550	106400 				mtps	R0			;+?
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-24
Common definitions for bios monitor

   1166	005552	103004 				bcc	8$			;+?
   1167	005554	012767 	000004 	001164 		mov	#4,	h.err		;+?
   1168	005562	000407 				br	4$			;+?
   1169	005564	032737 	000001 	161136 	8$:	bit	#s.err, @#id.csr	; Есть ошибки при выполнении?
   1170	005572	001403 				beq	4$			; Нет
   1171	005574	053767 	161122 	001144 		bis	@#id.err, h.err		; Да - запишем в h.err
   1172	005602	006001 			4$:	ror	R1			; Нужны прерывания?
   1173	005604	103024 				bcc	7$			; Нет
   1174	005606					SETINT	#idevec			; Да - выставим вектор
	005606	012737 	100332 	174170 	        mov     #idevec+vrqtbl-v.low+4, @#^o174170
	005614	000240 			        nop
   1175	005616	000417 				br	7$			;  и выйдем
   1176
   1177					;??????????????????????????????????????????????????????????????????????????
   1178
   1179	005620	012705 	000230 		5$:	mov	#hdcvec, R5		; ???
   1180	005624	032737 	000001 	161056 		bit	#s.err, @#hd.csr	; Были ошибки?
   1181	005632	001403 				beq	6$			; Нет
   1182	005634	053767 	161042 	001104 		bis	@#hd.err, h.err		; Если были - запомним их
   1183	005642	006001 			6$:	ror	R1			; Прерывания?
   1184	005644	103004 				bcc	7$			; Нет - не нужно
   1185	005646					SETINT	#hdcvec			; Нужно - ставим вектор
	005646	012737 	100322 	174170 	        mov     #hdcvec+vrqtbl-v.low+4, @#^o174170
	005654	000240 			        nop
   1186
   1187					;??????????????????????????????????????????????????????????????????????????
   1188
   1189	005656	016700 	001064 		7$:	mov	h.err, R0		; Ошибку - в регистр,
   1190	005662	000300 				swab	R0			;  в старший разряд
   1191	005664	052700 	000200 			bis	#200, R0		;  и флаг завершения
   1192	005670	056700 	172106 			bis	bootw, R0		; Холодная загрузка
   1193
   1194					.if	DF	$BIOS
   1195						CALL	UNPR.A			;++++++++++++++++++++++++
   1196					.endc
   1197
   1198	005674	010037 	147130 			mov	R0, @#hdc.buf		; И напишем...
   1199	005700	012777 	002000 	001006 		mov	#2000, @hb.copy		;
   1200
   1201					.if	DF	$BIOS
   1202						CALL	PROT.A			;++++++++++++++++++++++++
   1203					.endc
   1204
   1205	005706	000207 			ret:	return				;
   1206
   1207					;??????????????????????????????????????????????????????
   1208					;	Boot record and Partition Table Stucture
   1209					;
   1210	005710	000001 			i0.SBEG		:  .word	1	; Number of the first sector
   1211	005712				i0.SEC		:  .blkw	1	; Number of sectors per track
   1212	005714				i0.HEAD		:  .blkw	1	; Number of heads
   1213	005716				i0.TRACK	:  .blkw	1	; Number of cylinders
   1214	005720				i0.SIZE		:  .blkw	2	; Total size of disk in blocks
   1215	005724				i0.pcm		:  .blkw	1	; Precomp.
   1216	005726				i0.gap3		:  .blkw	1	; Gap 3 length
   1217					;???????????????????????????????????????
   1218	005730				h0.SEC		:  .blkw	1	; Number of sectors per track
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-25
Common definitions for bios monitor

   1219	005732				h0.HEAD		:  .blkw	1	; Number of heads
   1220	005734				h0.TRACK	:  .blkw	1	; Number of cylinders
   1221	005736				h0.SIZE		:  .blkw	2	; Total size of disk in blocks
   1222	005742				h0.pcm		:  .blkw	1	; Precomp.
   1223	005744				h0.gap3		:  .blkw	1	; Gap 3 length
   1224					;???????????????????????????????????????
   1225	005746				p.CB0		:  .blkw	1	; Number of first cylinder of the partition #0
   1226	005750				p.CN0		:  .blkw	1	; Number of cylinder`s in the partition #0
   1227	005752				p.HB0		:  .blkw	1	; Number of first head of the partition #0
   1228	005754				p.HN0		:  .blkw	1	; Number of heads in the partition #0
   1229	005756				p.SB0		:  .blkw	1	; Number of first sector of the partition #0
   1230	005760				p.SN0		:  .blkw	1	; Number of sectors in the partition #0
   1231	005762				p.RL0		:  .blkw	2	; Relative sector partition #0
   1232	005766				p.SZ0		:  .blkw	2	; Size of partition #0 in sector`s
   1233					;???????????????????????????????????????
   1234		000024 				par.len = . - p.cb0
   1235					;???????????????????????????????????????
   1236	005772						   .blkb	par.len*7
   1237					;???????????????????????????????????????
   1238	006206				h0.SIGN		:  .blkw	1	; signature 123456
   1239					;???????????????????????????????????????
   1240		000260 				par.siz	= . - h0.sec		; total partition tables size
   1241		000520 				par.fre	= 1000 - par.siz	; empty
   1242
   1243					;??????????????????????????????????????????????????????
   1244					;
   1245	006210				dsect	0		;
   1246	006210				dw	p$CB		; Number of first cylinder of the partition #0
   1247	006210				dw	p$CN		; Number of cylinder`s in the partition #0
   1248	006210				dw	p$HB		; Number of first head of the partition #0
   1249	006210				dw	p$HN		; Number of heads in the partition #0
   1250	006210				dw	p$SB		; Number of first sector of the partition #0
   1251	006210				dw	p$SN		; Number of sectors in the partition #0
   1252	006210				dw	p$RL,2		; Relative sector partition #0
   1253	006210				dw	p$SZ,2		; Size of partition #0 in sector`s
   1254
   1255					;?????????????????????????????????????????????????????????????????????????
   1256					; p.CB*
   1257					;	b0-b10	: Cylinder number
   1258					;	b15	: 0 - start from sector 1, 1 - from 2
   1259					;	b14	: 0 - off,		   1 - on disk
   1260					;	b13	: 0 - R/W,		   1 - read only
   1261					;	b12	: 0 - non bootable,	   1 - bootable disk
   1262					;	b11	: 0 - no warm boot	   1 - warm boot disk
   1263
   1264		100000 				pm.st1	= 100000
   1265		040000 				pm.off	= 040000
   1266		020000 				pm.rw	= 020000
   1267		010000 				pm.nb	= 010000
   1268		004000 				pm.wb	= 004000
   1269
   1270					;???????????????????????????????????????
   1271	006210	000000 			f.CB0		:  .word	0	; Number of first cylinder of the flop #0
   1272	006212	000122 			f.CN0		:  .word	82.	; Number of cylinder`s
   1273	006214	000002 			f.HB0		:  .word	2	; Number of first head
   1274	006216	000002 			f.HN0		:  .word	2	; Number of heads
   1275	006220	000001 			f.SB0		:  .word	1	; Number of first sector
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-26
Common definitions for bios monitor

   1276	006222	000012 			f.SN0		:  .word	10.	; Number of sectors
   1277	006224	   036 	   341 		f.RL0		:  .byte	30., 14.*20+1	; gap3, step rate
   1278	006226	   123 	   000 				   .byte	123,	0	; filler byte
   1279	006230	003150 	000000 		f.SZ0		:  .word	82.*2*10., 0	; Size of partition
   1280					;	????????????????????????????????
   1281	006234	000000 			f.CB1		:  .word	0	; Number of first cylinder of the flop #0
   1282	006236	000122 			f.CN1		:  .word	82.	; Number of cylinder`s
   1283	006240	000006 			f.HB1		:  .word	6	; Number of first head
   1284	006242	000002 			f.HN1		:  .word	2	; Number of heads
   1285	006244	000001 			f.SB1		:  .word	1	; Number of first sector
   1286	006246	000012 			f.SN1		:  .word	10.	; Number of sectors
   1287	006250	   036 	   341 		f.RL1		:  .byte	30., 14.*20+1	; gap3, step rate
   1288	006252	   123 	   000 				   .byte	123,	0	; filler byte
   1289	006254	003150 	000000 		f.SZ1		:  .word	82.*2*10., 0	; Size of partition
   1290					;	????????????????????????????????
   1291	006260	040000 			f.CB2		:  .word	40000	; Number of first cylinder of the flop #1
   1292	006262	000122 			f.CN2		:  .word	82.	; Number of cylinder`s
   1293	006264	000000 			f.HB2		:  .word	0	; Number of first head
   1294	006266	000002 			f.HN2		:  .word	2	; Number of heads
   1295	006270	000001 			f.SB2		:  .word	1	; Number of first sector
   1296	006272	000024 			f.SN2		:  .word	20.	; Number of sectors
   1297	006274	   024 	   321 		f.RL2		:  .byte	20., 13.*20+1	; gap3, step rate
   1298	006276	   123 	   000 				   .byte	123,	0	; filler byte
   1299	006300	006320 	000000 		f.SZ2		:  .word	82.*2*20., 0	; Size of partition
   1300					;	????????????????????????????????
   1301	006304	040000 			f.CB3		:  .word	40000	; Number of first cylinder of the flop #1
   1302	006306	000122 			f.CN3		:  .word	82.	; Number of cylinder`s
   1303	006310	000004 			f.HB3		:  .word	4	; Number of first head
   1304	006312	000002 			f.HN3		:  .word	2	; Number of heads
   1305	006314	000001 			f.SB3		:  .word	1	; Number of first sector
   1306	006316	000021 			f.SN3		:  .word	17.	; Number of sectors
   1307	006320	   024 	   321 		f.RL3		:  .byte	20., 13.*20+1	; gap3, step rate
   1308	006322	   123 	   000 				   .byte	123,	0	; filler byte
   1309	006324	005344 	000000 		f.SZ3		:  .word	82.*17.*2,0 	; Size of partition
   1310					;	????????????????????????????????
   1311	006330	040000 			f.CB4		:  .word	40000	; Number of first cylinder of the flop #1
   1312	006332	000120 			f.CN4		:  .word	80.	; Number of cylinder`s
   1313	006334	000000 			f.HB4		:  .word	0	; Number of first head
   1314	006336	000002 			f.HN4		:  .word	2	; Number of heads
   1315	006340	000001 			f.SB4		:  .word	1	; Number of first sector
   1316	006342	000022 			f.SN4		:  .word	18.	; Number of sectors
   1317	006344	   024 	   321 		f.RL4		:  .byte	20., 13.*20+1	; gap3, step rate
   1318	006346	   125 	   000 				   .byte	125,	0	; filler byte
   1319	006350	005500 	000000 		f.SZ4		:  .word	80.*2*18., 0	; Size of partition
   1320					;	????????????????????????????????
   1321	006354	040000 			f.CB5		:  .word	40000	; Number of first cylinder of the flop #1
   1322	006356	000120 			f.CN5		:  .word	80.	; Number of cylinder`s
   1323	006360	000004 			f.HB5		:  .word	4	; Number of first head
   1324	006362	000002 			f.HN5		:  .word	2	; Number of heads
   1325	006364	000001 			f.SB5		:  .word	1	; Number of first sector
   1326	006366	000017 			f.SN5		:  .word	15.	; Number of sectors
   1327	006370	   024 	   321 		f.RL5		:  .byte	20., 13.*20+1	; gap3, step rate
   1328	006372	   125 	   000 				   .byte	125,	0	; filler byte
   1329	006374	004540 	000000 		f.SZ5		:  .word	80.*15.*2,0 	; Size of partition
   1330					;	????????????????????????????????
   1331	006400	040000 			f.CB6		:  .word	40000	; Number of first cylinder of the flop #0
   1332	006402	000120 			f.CN6		:  .word	80.	; Number of cylinder`s
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-27
Common definitions for bios monitor

   1333	006404	000002 			f.HB6		:  .word	2	; Number of first head
   1334	006406	000002 			f.HN6		:  .word	2	; Number of heads
   1335	006410	000001 			f.SB6		:  .word	1	; Number of first sector
   1336	006412	000011 			f.SN6		:  .word	9.	; Number of sectors
   1337	006414	   036 	   341 		f.RL6		:  .byte	30., 14.*20+1	; gap3, step rate
   1338	006416	   125 	   000 				   .byte	125,	0	; filler byte
   1339	006420	002640 	000000 		f.SZ6		:  .word	80.*2*9., 0	; Size of partition
   1340					;	????????????????????????????????
   1341	006424	040000 			f.CB7		:  .word	40000	; Number of first cylinder of the flop #0
   1342	006426	000120 			f.CN7		:  .word	80.	; Number of cylinder`s
   1343	006430	000006 			f.HB7		:  .word	6	; Number of first head
   1344	006432	000002 			f.HN7		:  .word	2	; Number of heads
   1345	006434	000001 			f.SB7		:  .word	1	; Number of first sector
   1346	006436	000012 			f.SN7		:  .word	10.	; Number of sectors
   1347	006440	   036 	   341 		f.RL7		:  .byte	30., 14.*20+1	; gap3, step rate
   1348	006442	   125 	   000 				   .byte	125,	0	; filler byte
   1349	006444	003100 	000000 		f.SZ7		:  .word	80.*2*10., 0	; Size of partition
   1350
   1351					;?????????????????????????????????????????????????????????????????????
   1352	006450				ip.CB0		:  .blkw	1	; Number of first cylinder of the partition #0
   1353	006452				ip.CN0		:  .blkw	1	; Number of cylinder`s in the partition #0
   1354	006454				ip.HB0		:  .blkw	1	; Number of first head of the partition #0
   1355	006456				ip.HN0		:  .blkw	1	; Number of heads in the partition #0
   1356	006460				ip.SB0		:  .blkw	1	; Number of first sector of the partition #0
   1357	006462				ip.SN0		:  .blkw	1	; Number of sectors in the partition #0
   1358	006464				ip.RL0		:  .blkw	2	; Relative sector partition #0
   1359	006470				ip.SZ0		:  .blkw	2	; Size of partition #0 in sector`s
   1360					;???????????????????????????????????????
   1361		000024 			ipar.len 	=  . - ip.cb0		;
   1362					;???????????????????????????????????????
   1363	006474						   .blkb	ipar.len*7
   1364					;???????????????????????????????????????
   1365	006710				ih0.SIGN	:  .blkw	1	; signature 123456
   1366					;???????????????????????????????????????
   1367		000242 			ipar.siz	=  . - ip.CB0			; total partition tables size
   1368		000016 			ipar.add	=  i0.gap3 - i0.sec+2		;
   1369		000520 			ipar.fre	=  1000 - ipar.siz-ipar.add	; empty
   1370					;?????????????????????????????????????????????????????????????????????
   1371
   1372	006712				HDC.CPRC	:  .blkw	1		;
   1373	006714				HB.COPY		:  .blkw	1		;
   1374	006716				HR.MAP		:  .blkw	10		;
   1375	006736				HR.BLK		:  .blkw	1		;
   1376	006740				HR.DEV		:  .blkw	1		;
   1377	006742				HR.BUF		:  .blkw	1		;
   1378	006744				HR.CNTW		:  .blkw	1		;
   1379	006746	000000 			H.ERR		:  .word	0		;
   1380	006750	054321 					   .word	54321
   1381					;?????????????????????????????????????????????????????????????????????
   1382
   1383					;??????????????????????????????????????????????????????????????????????????
   1384					;                                 DATA
   1385					;
   1386					;		Данные для работы с IDE hard_disk'ом: КОНСТАНТЫ
   1387					;??????????????????????????????????????????????????????????????????????????
   1388
   1389
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-28
Common definitions for bios monitor

   1390		000300 				h.0C0		= 300		; 300 = 0C0h - BSY & RDY flags
   1391		000240 				h.0A0		= 240		; 240 = 0A0h - 512 bytes per sector
   1392		001130 				$IDE.TIME	= 50.*12.	; 12 sec - to read/write
   1393
   1394					;??????????????????????????????????????????????????????????????????????????
   1395					;                              SUBROUTINE
   1396					;
   1397					;	 Загружаем регистры контроллера IDE hard_disk'а
   1398					;		 xerr   - precomp
   1399					;		 xscnt  - number of sectors
   1400					;		 xsnum  - first sector
   1401					;		 xcyl   - cylinder number
   1402					;		 xsdh   - head/...
   1403					;		 xcsr   - command
   1404					;		 x.076  - биты для тестирования
   1405					;
   1406					;
   1407					;		Called from: IDE.send
   1408					;??????????????????????????????????????????????????????????????????????????
   1409
   1410	006752				IDE.xxx:
   1411	006752					.push	<R0,R1>
	006752	010046 				mov	R0,-(6.)
	006754	010146 				mov	R1,-(6.)
   1412	006756	012701 	001357'			mov	#xerr, R1
   1413
   1414					;?	movb	6(R1), R0		; xcsr
   1415					;?	bic	#177400, R0
   1416					;?	bit	#h.0C0, x.076		; биты проверить - RDY & BSY
   1417					;?	beq	1$
   1418					;?	cmp	R0, #117
   1419					;?	bhi	1$
   1420					;?	bis	#1, R0
   1421					;?
   1422					;? 1$:	movb	R0, 6(R1)		; command
   1423
   1424	006762	016700 	176736 			mov	i0.pcm, R0
   1425	006766	006200 				asr	R0
   1426	006770	006200 				asr	R0
   1427	006772	110021 				movb	R0, (R1)+		; precomp.
   1428
   1429	006774	116100 	000004 			movb	4(R1), R0
   1430	007000	142700 	177760 			bicb	#^C17, R0
   1431	007004	152700 	000240 			bisb	#h.0A0, R0
   1432	007010	110061 	000004 			movb	R0, 4(R1)
   1433
   1434					;?	bic	#^C<h.0C0>, x.076
   1435					;?	bis	offs.8, x.076
   1436
   1437	007014	016737 	001742 	161114 		mov	x.076, @#id.irq
   1438	007022	000240 				<nop>
   1439
   1440	007024	116167 	000004 	172302 		movb	4(R1), D955$
   1441	007032	042767 	177760 	172274 		bic	#^C17, D955$
   1442
   1443	007040	016767 	172316 	172262 		mov	xcyl, D95$
   1444	007046					DSTRING #D98$
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-29
Common definitions for bios monitor

	007046	012737 	001350'	174102 		mov	#D98$,	@#^o174102
	007054	000240 				nop
   1445	007056					DVAL	#D95$
	007056	012737 	001330'	174104 		mov	#D95$,	@#^o174104
	007064	000240 				nop
   1446	007066					DVAL	#D955$
	007066	012737 	001334'	174104 		mov	#D955$,	@#^o174104
	007074	000240 				nop
   1447	007076					.pop	<R1,R0>
	007076	012601 				mov	(6.)+,R1
	007100	012600 				mov	(6.)+,R0
   1448	007102	000207 				return
   1449
   1450					;??????????????????????????????????????????????????????????????????????????
   1451					;                              SUBROUTINE
   1452					;
   1453					;			Серьезно сбрасываем винт.
   1454					;			   Регистры сохраняются.
   1455					;
   1456					;				РЕЗУЛЬТАТ
   1457					;
   1458					;				  нет
   1459					;
   1460					;		Called from: IDE.skip,IDE.hlt
   1461					;??????????????????????????????????????????????????????????????????????????
   1462
   1463	007104				IDE.res:
   1464	007104					.push	<R0>
	007104	010046 				mov	R0,-(6.)
   1465	007106	012737 	000004 	161114 		mov	#4,	@#id.irq
   1466	007114	005000 				clr	R0
   1467	007116	077001 				sob	R0,	.
   1468	007120	016737 	001636 	161114 		mov	x.076,	@#id.irq
   1469	007126	077001 				sob	R0,	.
   1470	007130					.pop	<R0>
	007130	012600 				mov	(6.)+,R0
   1471	007132	000207 				return
   1472
   1473					;??????????????????????????????????????????????????????????????????????????
   1474					;                              SUBROUTINE
   1475					;
   1476					;		Ожидаем, пока в регистре 1F1h не снимется бит #7
   1477					;		 который означает, что команда в процессе.
   1478					;		Максимальная задержка = (IDE.delay * FFFFh).
   1479					;			Регистры сохраняются.
   1480					;
   1481					;				РЕЗУЛЬТАТ
   1482					;
   1483					;		Z = 0  - произошел timeout даже после сброса.
   1484					;		Z = 1  - бит был снят.
   1485					;
   1486					;		Called from: IDE.send, sec.r, sec.w
   1487					;??????????????????????????????????????????????????????????????????????????
   1488
   1489	007134				IDE.skip:
   1490	007134					.push	<R0,R1,R2>
	007134	010046 				mov	R0,-(6.)
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-30
Common definitions for bios monitor

	007136	010146 				mov	R1,-(6.)
	007140	010246 				mov	R2,-(6.)
   1491	007142	005001 				clr	R1
   1492	007144	012702 	000002 			mov	#2, R2
   1493	007150	016700 	001604 		3$:	mov	IDE.delay, R0
   1494
   1495	007154	105737 	161136 		2$:	tstb 	@#id.csr
   1496	007160	100012 				bpl	1$
   1497	007162	077104 				sob	R1, 2$
   1498	007164	077005 				sob	R0, 2$
   1499	007166	004767 	177712 			call	IDE.res
   1500	007172	077212 				sob	R2, 3$
   1501	007174					.pop	<R2,R1,R0>
	007174	012602 				mov	(6.)+,R2
	007176	012601 				mov	(6.)+,R1
	007200	012600 				mov	(6.)+,R0
   1502	007202	000244 				<clz>
   1503	007204	000207 				return
   1504	007206				1$:	.pop	<R2,R1,R0>
	007206	012602 				mov	(6.)+,R2
	007210	012601 				mov	(6.)+,R1
	007212	012600 				mov	(6.)+,R0
   1505	007214	000264 				<sez>
   1506	007216	000207 				return
   1507
   1508					;??????????????????????????????????????????????????????????????????????????
   1509					;                              SUBROUTINE
   1510					;
   1511					;		Ожидаем, пока в регистре  1F1h не установится
   1512					;		 комбинация, заданная в R4, маска для очистки
   1513					;		 содержится в R3.
   1514					;		Максимальная задержка = (IDE.delay * FFFFh).
   1515					;			Регистры сохраняются.
   1516					;
   1517					;				РЕЗУЛЬТАТ
   1518					;
   1519					;		Z = 0  - произошел timeout.
   1520					;		Z = 1  - комбинация совпала.
   1521					;
   1522					;		Called from: IDE.send, IDE.rb, IDE.wb
   1523					;??????????????????????????????????????????????????????????????????????????
   1524
   1525	007220				IDE.wait:
   1526	007220					.push	<R0,R1,R3,R5>
	007220	010046 				mov	R0,-(6.)
	007222	010146 				mov	R1,-(6.)
	007224	010346 				mov	R3,-(6.)
	007226	010546 				mov	R5,-(6.)
   1527	007230	005103 				com	R3			; R3 - CUT  mask
   1528	007232	016700 	001522 			mov	IDE.delay, R0		; R4 - TEST mask
   1529	007236	005001 				clr	R1			; 177777 - cycle
   1530
   1531	007240	013705 	161136 		2$:	mov	@#id.csr, R5
   1532	007244	040305 				bic	R3, R5
   1533	007246	020504 				cmp	R5, R4
   1534	007250	001410 				beq	1$
   1535
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-31
Common definitions for bios monitor

   1536	007252	077106 				sob	R1, 2$
   1537	007254	077007 				sob	R0, 2$
   1538	007256					.pop	<R5,R3,R1,R0>
	007256	012605 				mov	(6.)+,R5
	007260	012603 				mov	(6.)+,R3
	007262	012601 				mov	(6.)+,R1
	007264	012600 				mov	(6.)+,R0
   1539	007266	000244 				<clz>
   1540	007270	000207 				return
   1541
   1542	007272				1$:	.pop	<R5,R3,R1,R0>
	007272	012605 				mov	(6.)+,R5
	007274	012603 				mov	(6.)+,R3
	007276	012601 				mov	(6.)+,R1
	007300	012600 				mov	(6.)+,R0
   1543	007302	000264 				<sez>
   1544	007304	000207 				return
   1545
   1546					;??????????????????????????????????????????????????????????????????????????
   1547					;                              SUBROUTINE
   1548					;
   1549					;		Готовим регистры для передачи в hard_disk,
   1550					;		 пропускаем бит #7 в 1F7h,
   1551					;		 загружаем регистры в hard_disk_registers,
   1552					;			Регистры сохраняются.
   1553					;
   1554					;				РЕЗУЛЬТАТ
   1555					;
   1556					;		Z = 0  - произошел timeout.
   1557					;		Z = 1  - все прошло нормально.
   1558					;
   1559					;		Called from : sec.r, sec.w
   1560					;??????????????????????????????????????????????????????????????????????????
   1561
   1562	007306				IDE.send:
   1563	007306					.push	<R0,R1,R2,R3,R4>
	007306	010046 				mov	R0,-(6.)
	007310	010146 				mov	R1,-(6.)
	007312	010246 				mov	R2,-(6.)
	007314	010346 				mov	R3,-(6.)
	007316	010446 				mov	R4,-(6.)
   1564	007320	004767 	177426 			call	IDE.xxx
   1565	007324	012702 	000004 			mov	#4, R2			; Всего 4 попытки
   1566	007330	004767 	177600 		1$:	call	IDE.skip
   1567	007334	001041 				bne	4$
   1568
   1569	007336	032737 	000010 	161136 		bit	#10, @#id.csr		; Ожидаем, пока не выставится бит,
   1570	007344	001405 				beq	2$			;  сообщающий, что есть данные
   1571	007346	012737 	000020 	161136 		mov	#RESTORE, @#id.csr	;  такого не случилось - рекалибр.
   1572	007354	077213 				sob	R2, 1$			; Попытки кончились?
   1573	007356	000430 				br	4$			; Да - ошибка...
   1574
   1575	007360	012702 	000006 		2$:	mov	#6, R2
   1576	007364	012700 	161122 			mov	#id.err, R0
   1577	007370	012701 	001357'			mov	#xerr, R1
   1578
   1579	007374	112120 			3$:	movb	(R1)+, (R0)+
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-32
Common definitions for bios monitor

   1580	007376	005200 				inc	R0
   1581	007400	077203 				sob	R2, 3$
   1582
   1583	007402	012703 	000360 			mov	#360, R3		; AH
   1584	007406	012704 	000120 			mov	#120, R4		; AL
   1585	007412	004767 	177602 			call	IDE.wait
   1586	007416	001010 				bne	4$
   1587	007420	111110 				movb	(R1), (R0)
   1588
   1589	007422					.pop	<R4,R3,R2,R1,R0>
	007422	012604 				mov	(6.)+,R4
	007424	012603 				mov	(6.)+,R3
	007426	012602 				mov	(6.)+,R2
	007430	012601 				mov	(6.)+,R1
	007432	012600 				mov	(6.)+,R0
   1590	007434	000264 				<sez>
   1591	007436	000207 				return
   1592
   1593	007440				4$:	.pop	<R4,R3,R2,R1,R0>
	007440	012604 				mov	(6.)+,R4
	007442	012603 				mov	(6.)+,R3
	007444	012602 				mov	(6.)+,R2
	007446	012601 				mov	(6.)+,R1
	007450	012600 				mov	(6.)+,R0
   1594	007452	000244 				<clz>
   1595	007454	000207 				return
   1596
   1597					;??????????????????????????????????????????????????????????????????????????
   1598					;                              SUBROUTINE
   1599					;
   1600					;				РЕЗУЛЬТАТ
   1601					;
   1602					;		Z = 0  - произошел timeout.
   1603					;		Z = 1  - все прошло нормально.
   1604					;
   1605					;		Called from : IDE.rb,IDE.wb
   1606					;??????????????????????????????????????????????????????????????????????????
   1607
   1608	007456				IDE.hlt:
   1609	007456					.push	<R0,R1,R2>
	007456	010046 				mov	R0,-(6.)
	007460	010146 				mov	R1,-(6.)
	007462	010246 				mov	R2,-(6.)
   1610	007464	012701 	161136 			mov	#id.csr, R1
   1611	007470	005002 				clr	R2
   1612	007472	012700 	010760'			mov	#IDE.del, R0
   1613	007476	105711 			1$:	tstb	(R1)
   1614	007500	100406 				bmi	2$
   1615	007502	032711 	000001 			bit	#1, (R1)
   1616	007506	001007 				bne	3$
   1617	007510	032711 	000010 			bit	#10, (R1)
   1618	007514	001011 				bne	4$
   1619	007516	077211 			2$:	sob	R2, 1$
   1620	007520	077012 				sob	R0, 1$
   1621	007522	004767 	177356 			call	IDE.res
   1622	007526				3$:	.pop	<R2,R1,R0>
	007526	012602 				mov	(6.)+,R2
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-33
Common definitions for bios monitor

	007530	012601 				mov	(6.)+,R1
	007532	012600 				mov	(6.)+,R0
   1623	007534	000244 				<clz>
   1624	007536	000207 				return
   1625	007540				4$:	.pop	<R2,R1,R0>
	007540	012602 				mov	(6.)+,R2
	007542	012601 				mov	(6.)+,R1
	007544	012600 				mov	(6.)+,R0
   1626	007546	000264 				<sez>
   1627	007550	000207 				return
   1628
   1629					;??????????????????????????????????????????????????????????????????????????
   1630					;                              SUBROUTINE
   1631					;
   1632					;		Принимаем данные от hard_disk'а и передаем их
   1633					;		 в буфер "us.bufer", число слов для передачи
   1634					;		 в "n.words", остаток от FFh проглатывается.
   1635					;			Регистры _НЕ_ сохраняются.
   1636					;
   1637					;				РЕЗУЛЬТАТ
   1638					;
   1639					;		Z = 0  - произошел timeout.
   1640					;		Z = 1  - все прошло нормально.
   1641					;
   1642					;		Called from : sec.r
   1643					;??????????????????????????????????????????????????????????????????????????
   1644
   1645	007552	016701 	001206 		IDE.rb:	mov	us.bufer, R1
   1646	007556	016702 	001204 			mov	n.words, R2
   1647	007562	012705 	161120 			mov	#id.buf, R5
   1648
   1649	007566				1$:	.push	<R1,R2>
	007566	010146 				mov	R1,-(6.)
	007570	010246 				mov	R2,-(6.)
   1650	007572	012703 	001130 			mov	#<$IDE.time>, R3	; За это время должно считаться (4s)
   1651	007576	012704 	177777 			mov	#-1, R4			; Для проверки -> что произошло
   1652	007602					WHI.ONL	#<M.IDE+M.TIO>		; Ждем...
	007602	010046 				mov	R0,-(6.)
	007604	010146 				mov	R1,-(6.)
	007606	005000 			30009$:	clr	R0
	007610	005001 				clr	R1
	007612	012737 	000402 	174164 	        mov     #<M.IDE+M.TIO>,@#^o174164
	007620	000240 			        nop
	007622	005700 				tst	R0
	007624	001370 				bne	30009$
	007626	005701 				tst	R1
	007630	001366 				bne	30009$
	007632	012601 				mov	(6.)+,R1
	007634	012600 				mov	(6.)+,R0
   1653	007636	020402 				cmp	R4, R2			; Что было?
   1654	007640	001005 				bne	2$			; Был Time_Out
   1655	007642					.pop	<R2,R1>			; А это плохо - выходим с ошибкой
	007642	012602 				mov	(6.)+,R2
	007644	012601 				mov	(6.)+,R1
   1656	007646	004767 	177232 			call	IDE.res			; Скинем состояние
   1657	007652	000523 				br	14$			; Выходим
   1658
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-34
Common definitions for bios monitor

   1659	007654				2$:	.pop	<R2,R1>			; Регистры...
	007654	012602 				mov	(6.)+,R2
	007656	012601 				mov	(6.)+,R1
   1660
   1661	007660	004767 	177572 		3$:	call	IDE.hlt			; *
   1662	007664	001116 				bne	14$			; *
   1663
   1664	007666	012700 	000400 		4$:	mov	#256., R0
   1665	007672	160002 				sub	R0, R2
   1666	007674	100011 				bpl	7$
   1667
   1668	007676	060002 				add	R0, R2
   1669	007700	160200 				sub	R2, R0
   1670
   1671	007702	005302 			5$:	dec	R2
   1672	007704	100402 				bmi	6$
   1673	007706	011521 				mov	(R5), (R1)+
   1674	007710	000774 				br	5$
   1675
   1676	007712	005715 			6$:	tst	(R5)
   1677	007714	077002 				sob	R0, 6$
   1678	007716	000443 				br	9$
   1679
   1680	007720	012700 	000010 		7$:	mov	#10, R0		; *
   1681	007724	000040 			8$:  .rept	40		; *
   1682						mov	(R5), (R1)+	; *
   1683					     .endr			; *
	007724	011521 				mov	(R5), (R1)+	; *
	007726	011521 				mov	(R5), (R1)+	; *
	007730	011521 				mov	(R5), (R1)+	; *
	007732	011521 				mov	(R5), (R1)+	; *
	007734	011521 				mov	(R5), (R1)+	; *
	007736	011521 				mov	(R5), (R1)+	; *
	007740	011521 				mov	(R5), (R1)+	; *
	007742	011521 				mov	(R5), (R1)+	; *
	007744	011521 				mov	(R5), (R1)+	; *
	007746	011521 				mov	(R5), (R1)+	; *
	007750	011521 				mov	(R5), (R1)+	; *
	007752	011521 				mov	(R5), (R1)+	; *
	007754	011521 				mov	(R5), (R1)+	; *
	007756	011521 				mov	(R5), (R1)+	; *
	007760	011521 				mov	(R5), (R1)+	; *
	007762	011521 				mov	(R5), (R1)+	; *
	007764	011521 				mov	(R5), (R1)+	; *
	007766	011521 				mov	(R5), (R1)+	; *
	007770	011521 				mov	(R5), (R1)+	; *
	007772	011521 				mov	(R5), (R1)+	; *
	007774	011521 				mov	(R5), (R1)+	; *
	007776	011521 				mov	(R5), (R1)+	; *
	010000	011521 				mov	(R5), (R1)+	; *
	010002	011521 				mov	(R5), (R1)+	; *
	010004	011521 				mov	(R5), (R1)+	; *
	010006	011521 				mov	(R5), (R1)+	; *
	010010	011521 				mov	(R5), (R1)+	; *
	010012	011521 				mov	(R5), (R1)+	; *
	010014	011521 				mov	(R5), (R1)+	; *
	010016	011521 				mov	(R5), (R1)+	; *
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-35
Common definitions for bios monitor

	010020	011521 				mov	(R5), (R1)+	; *
	010022	011521 				mov	(R5), (R1)+	; *
   1684	010024	077041 				sob	R0, 8$
   1685
   1686	010026	132767 	000002 	171331 	9$:	bitb	#2, xcsr
   1687	010034	001414 				beq	11$
   1688
   1689	010036	012703 	000130 			mov	#130, R3
   1690	010042	012704 	000130 			mov	#130, R4
   1691	010046	004767 	177146 			call	IDE.wait
   1692	010052	001023 				bne	14$
   1693
   1694	010054	012700 	000004 			mov	#4, R0
   1695	010060	011521 			10$:	mov	(R5), (R1)+
   1696	010062	000240 				<nop>
   1697	010064	077003 				sob	R0, 10$
   1698
   1699	010066	105737 	161136 		11$:	tstb	@#id.csr
   1700	010072	100635 				bmi	1$
   1701	010074	032737 	000010 	161136 		bit	#10, @#id.csr
   1702	010102	001266 				bne	3$
   1703	010104	005702 				tst	R2		; *
   1704	010106	003005 				bgt	14$		; *
   1705
   1706	010110	105737 	161124 		12$:	tstb	@#id.scnt	; *
   1707	010114	001002 				bne	14$		; *
   1708
   1709	010116	000264 			13$:	<sez>
   1710	010120	000207 				return
   1711
   1712	010122	000244 			14$:	<clz>			; E R R O R !
   1713	010124	000207 				return
   1714
   1715
   1716
   1717					;??????????????????????????????????????????????????????????????????????????
   1718					;                              SUBROUTINE
   1719					;
   1720					;		Передаем данные hard_disk'у из буфера
   1721					;		 "us.bufer", число слов для передачи
   1722					;		  в "n.words", остаток от FFh нулится.
   1723					;			Регистры _НЕ_ сохраняются.
   1724					;
   1725					;				РЕЗУЛЬТАТ
   1726					;
   1727					;		Z = 0  - произошел timeout.
   1728					;		Z = 1  - все прошло нормально.
   1729					;
   1730					;		Called from : sec.w
   1731					;??????????????????????????????????????????????????????????????????????????
   1732
   1733	010126	016701 	000632 		IDE.wb:	mov	us.bufer, R1
   1734	010132	016702 	000630 			mov	n.words, R2
   1735	010136	012705 	161120 			mov	#id.buf, R5
   1736
   1737	010142	004767 	177310 		1$:	call	IDE.hlt
   1738	010146	001153 				bne	14$
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-36
Common definitions for bios monitor

   1739
   1740	010150	012700 	000400 		2$:	mov	#256., R0
   1741	010154	160002 				sub	R0, R2
   1742	010156	100011 				bpl	5$
   1743
   1744	010160	060002 				add	R0, R2
   1745	010162	160200 				sub	R2, R0
   1746
   1747	010164	005302 			3$:	dec	R2
   1748	010166	100402 				bmi	4$
   1749	010170	012115 				mov	(R1)+, (R5)
   1750	010172	000774 				br	3$
   1751
   1752	010174	005015 			4$:	clr	(R5)
   1753	010176	077002 				sob	R0, 4$
   1754					;	clr	R2
   1755	010200	000443 				br	7$
   1756
   1757	010202	012700 	000010 		5$:	mov	#10, R0
   1758	010206	000040 			6$:  .rept	40
   1759						mov	(R1)+, (R5)
   1760					     .endr
	010206	012115 				mov	(R1)+, (R5)
	010210	012115 				mov	(R1)+, (R5)
	010212	012115 				mov	(R1)+, (R5)
	010214	012115 				mov	(R1)+, (R5)
	010216	012115 				mov	(R1)+, (R5)
	010220	012115 				mov	(R1)+, (R5)
	010222	012115 				mov	(R1)+, (R5)
	010224	012115 				mov	(R1)+, (R5)
	010226	012115 				mov	(R1)+, (R5)
	010230	012115 				mov	(R1)+, (R5)
	010232	012115 				mov	(R1)+, (R5)
	010234	012115 				mov	(R1)+, (R5)
	010236	012115 				mov	(R1)+, (R5)
	010240	012115 				mov	(R1)+, (R5)
	010242	012115 				mov	(R1)+, (R5)
	010244	012115 				mov	(R1)+, (R5)
	010246	012115 				mov	(R1)+, (R5)
	010250	012115 				mov	(R1)+, (R5)
	010252	012115 				mov	(R1)+, (R5)
	010254	012115 				mov	(R1)+, (R5)
	010256	012115 				mov	(R1)+, (R5)
	010260	012115 				mov	(R1)+, (R5)
	010262	012115 				mov	(R1)+, (R5)
	010264	012115 				mov	(R1)+, (R5)
	010266	012115 				mov	(R1)+, (R5)
	010270	012115 				mov	(R1)+, (R5)
	010272	012115 				mov	(R1)+, (R5)
	010274	012115 				mov	(R1)+, (R5)
	010276	012115 				mov	(R1)+, (R5)
	010300	012115 				mov	(R1)+, (R5)
	010302	012115 				mov	(R1)+, (R5)
	010304	012115 				mov	(R1)+, (R5)
   1761	010306	077041 				sob	R0, 6$
   1762
   1763	010310	132767 	000002 	171047 	7$:	bitb	#2, xcsr
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-37
Common definitions for bios monitor

   1764	010316	001414 				beq	9$
   1765
   1766	010320	012703 	000130 			mov	#130, R3
   1767	010324	012704 	000130 			mov	#130, R4
   1768	010330	004767 	176664 			call	IDE.wait
   1769	010334	001060 				bne	14$
   1770
   1771	010336	012700 	000004 			mov	#4, R0
   1772	010342	012115 			8$:	mov	(R1)+, (R5)
   1773	010344	000240 				<nop>
   1774	010346	077003 				sob	R0, 8$
   1775
   1776	010350				9$:	.push	<R1,R2>
	010350	010146 				mov	R1,-(6.)
	010352	010246 				mov	R2,-(6.)
   1777	010354	012703 	001130 			mov	#<$IDE.TIME>, R3	;за это время должно записаться
   1778	010360	012704 	177777 			mov	#-1, R4
   1779	010364					WHI.ONL	#<M.IDE+M.TIO>
	010364	010046 				mov	R0,-(6.)
	010366	010146 				mov	R1,-(6.)
	010370	005000 			30010$:	clr	R0
	010372	005001 				clr	R1
	010374	012737 	000402 	174164 	        mov     #<M.IDE+M.TIO>,@#^o174164
	010402	000240 			        nop
	010404	005700 				tst	R0
	010406	001370 				bne	30010$
	010410	005701 				tst	R1
	010412	001366 				bne	30010$
	010414	012601 				mov	(6.)+,R1
	010416	012600 				mov	(6.)+,R0
   1780	010420	020402 				cmp	R4, R2
   1781	010422	001005 				bne	10$
   1782	010424					.pop	<R2,R1>
	010424	012602 				mov	(6.)+,R2
	010426	012601 				mov	(6.)+,R1
   1783	010430	004767 	176450 			call	IDE.res
   1784	010434	000420 				br	14$
   1785
   1786	010436				10$:	.pop	<R2,R1>
	010436	012602 				mov	(6.)+,R2
	010440	012601 				mov	(6.)+,R1
   1787	010442	105737 	161136 			tstb	@#id.csr	; *
   1788	010446	100413 				bmi	14$		; *
   1789
   1790	010450	032737 	000010 	161136 	11$:	bit	#10, @#id.csr
   1791	010456	001234 				bne	2$
   1792
   1793	010460	005702 				tst	R2		; *
   1794	010462	003005 				bgt	14$		; *
   1795
   1796	010464	105737 	161124 		12$:	tstb	@#id.scnt	;+
   1797	010470	001002 				bne	14$		;+
   1798
   1799	010472	000264 			13$:	<sez>
   1800	010474	000207 				return
   1801
   1802	010476	000244 			14$:	<clz>
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-38
Common definitions for bios monitor

   1803	010500	000207 				return
   1804
   1805					;??????????????????????????????????????????????????????????????????????????
   1806					;                              SUBROUTINE
   1807					;
   1808					;			Прием от hard_disk'а данных.
   1809					;			Регистры сохраняются кроме R1.
   1810					;
   1811					;				РЕЗУЛЬТАТ
   1812					;
   1813					;			C = 1  - произошел timeout.
   1814					;			C = 0  - все прошло нормально.
   1815					;??????????????????????????????????????????????????????????????????????????
   1816
   1817	010502				sec.r:	.push	<R0,R2,R3,R4,R5>
	010502	010046 				mov	R0,-(6.)
	010504	010246 				mov	R2,-(6.)
	010506	010346 				mov	R3,-(6.)
	010510	010446 				mov	R4,-(6.)
	010512	010546 				mov	R5,-(6.)
   1818	010514	010367 	000246 			mov	R3, n.words
   1819	010520	010167 	000240 			mov	R1, us.buffer
   1820	010524	004767 	176556 			call	IDE.send
   1821	010530	001015 				bne	1$
   1822	010532	004767 	177014 			call	IDE.rb
   1823	010536	001012 				bne	1$
   1824	010540	004767 	176370 			call	IDE.skip
   1825	010544	001007 				bne	1$
   1826	010546					.pop	<R5,R4,R3,R2,R0>
	010546	012605 				mov	(6.)+,R5
	010550	012604 				mov	(6.)+,R4
	010552	012603 				mov	(6.)+,R3
	010554	012602 				mov	(6.)+,R2
	010556	012600 				mov	(6.)+,R0
   1827	010560	000241 				<clc>
   1828	010562	000207 				return
   1829
   1830	010564				1$:	.pop	<R5,R4,R3,R2,R0>
	010564	012605 				mov	(6.)+,R5
	010566	012604 				mov	(6.)+,R4
	010570	012603 				mov	(6.)+,R3
	010572	012602 				mov	(6.)+,R2
	010574	012600 				mov	(6.)+,R0
   1831	010576	000261 				<sec>
   1832	010600	000207 				return
   1833
   1834					;??????????????????????????????????????????????????????????????????????????
   1835					;                              SUBROUTINE
   1836					;
   1837					;			Передача в hard_disk данных.
   1838					;			Регистры сохраняются кроме R1.
   1839					;
   1840					;				РЕЗУЛЬТАТ
   1841					;
   1842					;			C = 1  - произошел timeout.
   1843					;			C = 0  - все прошло нормально.
   1844					;??????????????????????????????????????????????????????????????????????????
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-39
Common definitions for bios monitor

   1845
   1846	010602				sec.w:	.push	<R0,R2,R3,R4,R5>
	010602	010046 				mov	R0,-(6.)
	010604	010246 				mov	R2,-(6.)
	010606	010346 				mov	R3,-(6.)
	010610	010446 				mov	R4,-(6.)
	010612	010546 				mov	R5,-(6.)
   1847	010614	010367 	000146 			mov	R3, n.words
   1848	010620	010167 	000140 			mov	R1, us.buffer
   1849	010624	004767 	176456 			call	IDE.send
   1850	010630	001015 				bne	1$
   1851	010632	004767 	177270 			call	IDE.wb
   1852	010636	001012 				bne	1$
   1853	010640	004767 	176270 			call	IDE.skip
   1854	010644	001007 				bne	1$
   1855	010646					.pop	<R5,R4,R3,R2,R0>
	010646	012605 				mov	(6.)+,R5
	010650	012604 				mov	(6.)+,R4
	010652	012603 				mov	(6.)+,R3
	010654	012602 				mov	(6.)+,R2
	010656	012600 				mov	(6.)+,R0
   1856	010660	000241 				<clc>
   1857	010662	000207 				return
   1858
   1859	010664				1$:	.pop	<R5,R4,R3,R2,R0>
	010664	012605 				mov	(6.)+,R5
	010666	012604 				mov	(6.)+,R4
	010670	012603 				mov	(6.)+,R3
	010672	012602 				mov	(6.)+,R2
	010674	012600 				mov	(6.)+,R0
   1860	010676	000261 				<sec>
   1861	010700	000207 				return
   1862
   1863					;??????????????????????????????????????????????????????????????????????????
   1864					;                              SUBROUTINE
   1865					;		Настраиваемся на регистры диспетчера вызвавшего
   1866					;		 прерывание процесса и переключаем окна #2,3
   1867					;		R1 - начало области для операции.
   1868					;
   1869					;		Called from : ...
   1870					;??????????????????????????????????????????????????????????????????????????
   1871
   1872					.if	DF	$BIOS
   1873
   1874					SETMAP:	clr	R0
   1875						asl	R1			;	ashc	#3, R0
   1876						rol	R0			;
   1877						asl	R1			;
   1878						rol	R0			;
   1879						asl	R1			;
   1880						rol	R0			;
   1881						asl	R0
   1882						ror	R1
   1883						sec
   1884						ror	R1
   1885						ror	R1
   1886						mov	hr.map(R0), UR2
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-40
Common definitions for bios monitor

   1887						mov	hr.map+2(R0), UR3
   1888						return
   1889
   1890					.iff
   1891
   1892	010702	005000 			SETMAP:	clr	R0
   1893
   1894	010704	006301 				asl	R1			;	ashc	#3, R0
   1895	010706	006100 				rol	R0			;
   1896	010710	006301 				asl	R1			;
   1897	010712	006100 				rol	R0			;
   1898	010714	006301 				asl	R1			;
   1899	010716	006100 				rol	R0			;
   1900
   1901	010720	006300 				asl	R0
   1902
   1903	010722	000261 				sec
   1904	010724	006001 				ror	R1			; 1xxxxx
   1905	010726	006001 				ror	R1			; 01xxxxx
   1906	010730	006001 				ror	R1			; 001xxx
   1907	010732	016067 	006716'	161222'		mov	hr.map(R0), UR1
   1908	010740	016067 	006720'	161224'		mov	hr.map+2(R0), UR2
   1909	010746	016067 	006722'	161226'		mov	hr.map+4(R0), UR3
   1910	010754	000207 				return
   1911					.endc
   1912
   1913					;??????????????????????????????????????????????????????????????????????????
   1914					;  Эти две подпрограммки сделаны при поиске ошибке - неожиданное зависание
   1915					;
   1916					;??????????????????????????????????????????????????????????????????????????
   1917
   1918					.if	DF	$BIOS
   1919					UNPR.A:	mov	@#HR4,	@#UR4
   1920						mov	@#HR5,	@#UR5
   1921						clr	@#UR6
   1922						return
   1923
   1924					PROT.A:	mov	#10, @#UR4
   1925						mov	#10, @#UR5
   1926						mov	#10, @#UR6
   1927						return
   1928					.endc
   1929
   1930					;??????????????????????????????????????????????????????????????????????????
   1931					;                                 DATA
   1932					;
   1933					;		Данные для работы с IDE hard_disk'ом : ПЕРЕМЕННЫЕ.
   1934					;??????????????????????????????????????????????????????????????????????????
   1935
   1936	010756	000000 			offs.8		:  .word	0
   1937	010760	000005 			IDE.delay	:  .word	5		; 28h
   1938	010762	000000 			x.076		:  .word	0
   1939	010764	000000 			us.buffer	:  .word	0
   1940	010766	000000 			n.words		:  .word	0
   1941
   1942		001454'				.end	hdcini
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-41
Symbol table

ADD.RE= 140000   	F.CN3   006306R  	F.SN3   006316R  	H0.SIG  006206R  	KBDBUF= 161064 G
AUTOPD= 000342   	F.CN4   006332R  	F.SN4   006342R  	H0.SIZ  005736R  	KBDCSR= 161066 G
BAD     002414R  	F.CN5   006356R  	F.SN5   006366R  	H0.TRA  005734R  	LF    = 000012 G
BA10  = 000002   	F.CN6   006402R  	F.SN6   006412R  	I     = 000010   	LOOP    003516R
BA9   = 000001   	F.CN7   006426R  	F.SN7   006436R  	IDECAS= 000040   	LOOP0   002674R
BCNT    000005R  	F.CYL   000017R  	F.SPEC  000012R  	IDEVEC= 000240 G 	L.RDA = 150000 G
BOOTD   000000R  	F.DTL   000025R  	F.SZ0   006230R  	IDE$CN= 000001   	L.REG = 140000 G
BOOTW   000002R  	F.EOT   000023R  	F.SZ1   006254R  	IDE$NU= 000001   	M     = 000004
B.EF0 = 000001 G 	F.FORM= 046406   	F.SZ2   006300R  	IDE.AD= 000060   	MAPLEN= 100002
B.EF1 = 000002 G 	F.GPL   000024R  	F.SZ3   006324R  	IDE.DE  010760R  	MEMUSE= 100014
B.INT = 000004 G 	F.HB0   006214R  	F.SZ4   006350R  	IDE.HL  007456R  	M.FLOP= 000002 G
CONT    002422R  	F.HB1   006240R  	F.SZ5   006374R  	IDE.RB  007552R  	M.HD  = 000002
CR    = 000015 G 	F.HB2   006264R  	F.SZ6   006420R  	IDE.RE  007104R  	M.IDE = 000002
C.HLT = 000004 G 	F.HB3   006310R  	F.SZ7   006444R  	IDE.SE  007306R  	M.INIT= 000001 G
C.IRQ = 000010 G 	F.HB4   006334R  	F.WRIT= 042411   	IDE.SK  007134R  	M.KBD = 000020 G
C.TIM0= 100574   	F.HB5   006360R  	F1SEL = 000004   	IDE.WA  007220R  	M.PRRD= 000100 G
C.TIM1= 100576   	F.HB6   006404R  	HB.COP  006714R  	IDE.WB  010126R  	M.RCRD= 000004 G
DENS.L= 000002   	F.HB7   006430R  	HDBTBL  001416R  	IDE.XX  006752R  	M.RUN = 040000 G
DLBUF = 161060 G 	F.HDS   000016R  	HDCBUF= 177130 G 	ID.BUF= 161120   	M.SCRN= 000040 G
DLCS  = 161062 G 	F.HEAD  000020R  	HDCINI  001454RG 	ID.CNH= 161132   	M.SLOT= 000200 G
D100$   001354R  	F.HN0   006216R  	HDCVEC= 000230 G 	ID.CNL= 161130   	M.TIO = 000400 G
D95$    001330R  	F.HN1   006242R  	HDC.BU= 147130   	ID.CSR= 161136   	M.TRRD= 000010 G
D955$   001334R  	F.HN2   006266R  	HDC.CP  006712R  	ID.ERR= 161122   	M.VRQ = 100000 G
D96$    001340R  	F.HN3   006312R  	HD.BUF= 161040   	ID.IRQ= 161114   	N.WORD  010766R
D97$    001344R  	F.HN4   006336R  	HD.CNH= 161052   	ID.SCN= 161124   	OFFS.8  010756R
D98$    001350R  	F.HN5   006362R  	HD.CNL= 161050   	ID.SDH= 161134   	OK      002266R
E.AC  = 000004   	F.HN6   006406R  	HD.CSR= 161056   	ID.SNU= 161126   	OK.MFM  002142R
E.BAD = 000200   	F.HN7   006432R  	HD.ERR= 161042   	IERR    000236R  	PAR.FR= 000520
E.CRC = 000100   	F.LEN   000022R  	HD.SCN= 161044   	IH0.SI  006710R  	PAR.LE= 000024
E.DMNF= 000001   	F.READ= 043011   	HD.SDH= 161054   	IPAR.A= 000016   	PAR.SI= 000260
E.IDNF= 000020   	F.REC = 003402   	HD.SNU= 161046   	IPAR.F= 000520   	PDPTR = 100572
E.TR0 = 000002   	F.RESE  000110R  	HEAP  = 100000   	IPAR.L= 000024   	PICCSR= 161000 G
FAIL    002136R  	F.RL0   006224R  	HEAP$$= 100602   	IPAR.S= 000242   	PICMR = 161002 G
FAIL.I  002250R  	F.RL1   006250R  	HR.BLK  006736R  	IP.CB0  006450R  	PM.NB = 010000
FDBUF = 161072   	F.RL2   006274R  	HR.BUF  006742R  	IP.CN0  006452R  	PM.OFF= 040000
FDCNT = 161076   	F.RL3   006320R  	HR.CNT  006744R  	IP.HB0  006454R  	PM.RW = 020000
FDCSR = 161070   	F.RL4   006344R  	HR.DEV  006740R  	IP.HN0  006456R  	PM.ST1= 100000
FDCVEC= 000234 G 	F.RL5   006370R  	HR.MAP  006716R  	IP.RL0  006464R  	PM.WB = 004000
FD.INI= 000020   	F.RL6   006414R  	HR0   = 161200 G 	IP.SB0  006460R  	PNAME   001432R
FOREIG  002552R  	F.RL7   006440R  	HR1   = 161202 G 	IP.SN0  006462R  	PPIA  = 161030 G
FORMAT= 000120   	F.RW    000614R  	HR2   = 161204 G 	IP.SZ0  006470R  	PPIB  = 161032 G
FREEMA= 100012   	F.SB0   006220R  	HR3   = 161206 G 	I.BAD   003202R  	PPIC  = 161034 G
FREEPR= 100006   	F.SB1   006244R  	HR4   = 161210 G 	I.CAUN  003210R  	PPIP  = 161036 G
FREERE= 100004   	F.SB2   006270R  	HR5   = 161212 G 	I.FAIL  000010R  	PROLEN= 000106 G
FREESE= 100010   	F.SB3   006314R  	HR6   = 161214 G 	I.FORE  003340R  	P$CB  = 000000
F.CB0   006210R  	F.SB4   006340R  	HR7   = 161216 G 	I.F.BA  003474R  	P$CN  = 000002
F.CB1   006234R  	F.SB5   006364R  	HSTACK= 140000   	I.HLT = 000200 G 	P$HB  = 000004
F.CB2   006260R  	F.SB6   006410R  	H.ERR   006746R  	I.LOOP  003502R  	P$HN  = 000006
F.CB3   006304R  	F.SB7   006434R  	H.EXIT  005462R  	I.SFRE= 000340   	P$RL  = 000014
F.CB4   006330R  	F.SDS = 002002   	H.FAIL  000006R  	I.S512= 000240   	P$SB  = 000010
F.CB5   006354R  	F.SECT  000021R  	H.WBUF  003600R  	I0.GAP  005726R  	P$SN  = 000012
F.CB6   006400R  	F.SEEK= 007403   	H.0A0 = 000240   	I0.HEA  005714R  	P$SZ  = 000020
F.CB7   006424R  	F.SET   000130R  	H.0C0 = 000300   	I0.PCM  005724R  	P.CB0   005746R
F.CMD   000015R  	F.SIS = 004001   	H0.GAP  005744R  	I0.SBE  005710R  	P.CN0   005750R
F.CN0   006212R  	F.SN0   006222R  	H0.HEA  005732R  	I0.SEC  005712R  	P.CPRC= 000050
F.CN1   006236R  	F.SN1   006246R  	H0.PCM  005742R  	I0.SIZ  005720R  	P.DSUC= 000104
F.CN2   006262R  	F.SN2   006272R  	H0.SEC  005730R  	I0.TRA  005716R  	P.ERR   000220R
Hard Disk Controller	MACRO V05.06R Tuesday 15-Sep-20 10:57  Page 3-42
Symbol table

P.HB0   005752R  	RDSECT= 000040   	SDH2  = 000004   	S.SUCC= 000004   	V.BUT = 100072
P.HN0   005754R  	RDSTAT  000036R  	SD0H  = 000010   	S.T1    000244R  	V.CPUH= 100062
P.MASK= 000046   	RDSUCC= 100022   	SEC.R   010502R  	S.T2    000246R  	V.FLOP= 100112
P.MEM = 000056   	READYQ= 100020   	SEC.W   010602R  	S.WF  = 000040   	V.HD  = 100112
P.NAME= 000060   	REGLEN= 000014 G 	SEEK  = 000160   	S1024 = 000100   	V.HIGH= 000500 G
P.PC  = 000022   	RESTOR= 000020   	SEMLEN= 000010 G 	S128  = 000140   	V.IDE = 100112
P.PRED= 000002   	RET     005706R  	SETMAP  010702R  	S256  = 000000   	V.INIT= 100106
P.PRI = 000054   	RUN   = 000020   	SNDCSR= 161016 G 	S512  = 000040   	V.KBD = 100126
P.PS  = 000024   	RUNNIN= 100016   	SNDC0R= 161010 G 	T     = 000001   	V.LOW = 000060 G
P.RL0   005762R  	R.COPY= 000002   	SNDC1R= 161012 G 	TCFLG = 100600   	V.PRRD= 100136
P.R0  = 000004   	R.MASK= 000000   	SNDC2R= 161014 G 	TIMEQU= 100026   	V.RCRD= 100116
P.R1  = 000006   	R.PROC= 000006   	SNLCSR= 161026 G 	TMPRED= 100032   	V.SCRN= 100132
P.R2  = 000010   	R.RESE= 000012   	SNLC0R= 161020 G 	TMSUCC= 100030   	V.SLOT= 100142
P.R3  = 000012   	R.RQST= 000004   	SNLC1R= 161022 G 	TOP$$ = 100034   	V.SUPR= 100076
P.R4  = 000014   	R.STAT= 000005   	SNLC2R= 161024 G 	T1COPY= 177132   	V.TRRD= 100122
P.R5  = 000016   	R.STRT= 000010   	S.BUSY= 000200   	T1TBL   001366R  	V.TR4H= 100066
P.SB0   005756R  	R0.035= 000000   	S.CMD = 000002   	T1.COP= 147132   	V.2TIO= 100102
P.SN0   005760R  	R0.5  = 000001   	S.CNTR= 000000   	T2COPY= 177134   	WRCMD   000142R
P.SP  = 000020   	R1.0  = 000002   	S.CYL   000031R  	T2TBL   001402R  	WRCMD1  000152R
P.SUCC= 000000   	R7.5  = 000017   	S.DRQ = 000010   	T2.COP= 147134   	WRSECT= 000060
P.SZ0   005766R  	SAV.PC= 100056   	S.ERR = 000001   	UR0   = 161220 G 	XCSR    001365R
P.TIM = 000052   	SAV.PS= 100060   	S.FRST= 000002   	UR1   = 161222 G 	XCYL    001362R
P.TIM0= 000100   	SAV.R0= 100040   	S.HD    000032R  	UR2   = 161224 G 	XERR    001357R
P.TIM1= 000102   	SAV.R1= 100042   	S.LEN   000034R  	UR3   = 161226 G 	XREAD   000312R
P.UR0 = 000026   	SAV.R2= 100044   	S.PRED= 000006   	UR4   = 161230 G 	XSCNT   001360R
P.UR1 = 000030   	SAV.R3= 100046   	S.RDY = 000100   	UR5   = 161232 G 	XSDH    001364R
P.UR2 = 000032   	SAV.R4= 100050   	S.SC  = 000020   	UR6   = 161234 G 	XSNUM   001361R
P.UR3 = 000034   	SAV.R5= 100052   	S.SEC   000033R  	UR7   = 161236 G 	XWR     000312R
P.UR4 = 000036   	SAV.SP= 100054   	S.SP    000035R  	US.BUF  010764R  	X.ECC = 000200
P.UR5 = 000040   	SCAN  = 000100   	S.ST0   000026R  	VECLEN= 000064 G 	X.076   010762R
P.UR6 = 000042   	SDH0  = 000001   	S.ST1   000027R  	VRQFLG= 100036   	$IDE.T= 001130
P.UR7 = 000044   	SDH1  = 000002   	S.ST2   000030R  	VRQTBL= 100146   	$$    = 000024
RDPRED= 100024

. ABS.	000031    000	(RW,I,GBL,ABS,OVR)
      	010770    001	(RW,I,LCL,REL,CON)
Errors detected:  0

*** Assembler statistics


Work  file  reads: 0
Work  file writes: 0
Size of work file: 9997 Words  ( 40 Pages)
Size of core pool: 16640 Words  ( 65 Pages)
Operating  system: RT-11

Elapsed time: 00:00:00.30
DK:IDE,DK:IDE=DK:IDE
